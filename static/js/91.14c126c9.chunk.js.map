{"version":3,"file":"static/js/91.14c126c9.chunk.js","mappings":"wJAEO,MAAMA,EAAcC,IAEvB,IAAIC,EAAQ,EAEZ,OAAKD,GAAsB,GAAXA,GAKZA,EAAU,MACVC,GAAS,EAEJD,EAAU,OACfC,GAAS,GAEJD,EAAU,OACfC,GAAS,GAEJD,EAAU,OACfC,GAAS,GAEJD,EAAU,OACfC,GAAS,GAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,SAGVA,EAAU,QAFfC,GAAS,IAKJD,EAAU,SAGVA,EAAU,QAFfC,GAAS,IAKJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,EAAQ,IAEHD,EAAU,QACfC,GAAS,IAEJD,EAAU,UAGVA,EAAU,UAGVA,EAAU,SALfC,GAAS,IAQJD,EAAU,SACfC,GAAS,IAEJD,EAAU,SACfC,GAAS,IAEJD,EAAU,SACfC,GAAS,IAEJD,EAAU,WACfC,GAAoB,IAAVD,GAMVA,EAAU,OACVC,GAAS,GAEJD,EAAU,OACfC,GAAS,GAEJD,EAAU,QACfC,GAAS,GAEJD,EAAU,QACfC,GAAS,GAEJD,EAAU,QACfC,GAAS,GAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,UACfC,GAAgB,KAIpBA,GAAS,GACTA,GAAS,GACTA,GAAS,GAEFA,GAvKI,CAuKC,EAIHC,EAAYF,IAErB,IAAIC,EAAQ,EAEZ,OAAKD,GAAsB,GAAXA,GAMZA,EAAU,MACVC,GAAS,EAEJD,EAAU,OACfC,GAAS,GAEJD,EAAU,OACfC,GAAS,GAEJD,EAAU,OACfC,GAAS,GAEJD,EAAU,OACfC,GAAS,GAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,OACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,SAGVA,EAAU,QAFfC,GAAS,IAKJD,EAAU,SAGVA,EAAU,QAFfC,GAAS,IAKJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,EAAQ,IAEHD,EAAU,QACfC,GAAS,IAEJD,EAAU,UAGVA,EAAU,UAGVA,EAAU,SALfC,GAAS,IAQJD,EAAU,SACfC,GAAS,IAEJD,EAAU,SACfC,GAAS,IAEJD,EAAU,SACfC,GAAS,IAEJD,EAAU,WACfC,GAAoB,IAAVD,GAIVA,EAAU,OACVC,GAAS,GAEJD,EAAU,OACfC,GAAS,GAEJD,EAAU,QACfC,GAAS,GAEJD,EAAU,QACfC,GAAS,GAEJD,EAAU,QACfC,GAAS,GAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,QACfC,GAAS,IAEJD,EAAU,UACfC,GAAgB,KAGpBA,GAAS,GACTA,GAAS,GACTA,GAAS,GAEFA,GArKI,CAqKC,EC3VHE,EAAcH,IAAO,CAC9BI,KAAM,eACNC,QAASL,IAGAM,EAAiBC,IAAU,CACpCH,KAAM,kBACNC,QAASE,IAGAC,EAAuBC,IAAgB,CAChDL,KAAM,yBACNC,QAASI,IAkBAC,EAAaC,IAAa,CACnCP,KAAM,aACNC,QAASM,IAGAC,EAAoBD,IAAa,CAC1CP,KAAM,qBACNC,QAASM,IAGAE,EAAoBC,IAAY,CACzCV,KAAM,qBACNC,QAASS,IAGAC,EAAuBC,IAAgB,CAChDZ,KAAM,wBACNC,QAASW,IAGAC,EAAoBC,IAAc,CAC3Cd,KAAM,qBACNC,QAASa,IAGAC,EAAkBC,IAAW,CACtChB,KAAM,oBACNC,QAASe,IAGAC,EAAYC,IAAK,CAC1BlB,KAAM,YACNC,QAASiB,IAGAC,EAAcC,IAAO,CAC9BpB,KAAM,cACNC,QAASmB,IAGAC,EAAsBC,IAAe,CAC9CtB,KAAM,uBACNC,QAASqB,IAGAC,EAAgBC,IAAS,CAClCxB,KAAM,iBACNC,QAASuB,IAGAC,EAAiBC,IAAU,CACpC1B,KAAM,kBACNC,QAASyB,IAGAC,EAAiBC,IAAU,CACpC5B,KAAM,kBACNC,QAAS2B,IAQAC,EAAiBC,IAAU,CACpC9B,KAAM,kBACNC,QAAS6B,IAQAC,EAAoBC,IAAa,CAC1ChC,KAAM,qBACNC,QAAS+B,I,aCtGE,SAASC,IAEpB,MAAMC,GAAWC,EAAAA,EAAAA,MAEXb,GAAkBc,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAAShB,kBACtDnB,GAAaiC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASnC,aACjDE,GAAmB+B,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASjC,mBACvDT,GAAUwC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAAS1C,UAE9C2C,EAA4BA,CAAC3C,EAAS0B,KAExC,IAAIkB,EAAwB,EAC5B,OAAQlB,GACJ,IAAK,SACDkB,EAAwB7C,EAAWC,GACnC,MACJ,IAAK,OACD4C,EAAwB1C,EAASF,GACjC,MACJ,QACI4C,EAAwB,EAMhC,OAHAN,EAASnC,EAAWH,IACpBsC,EAAShC,EAAcsC,IACvBN,EAAS9B,EAAoBqC,WAAW7C,GAAW4C,IAC5CA,CAAqB,EAIhCE,EAAAA,WAAgB,KACPpB,GACLiB,EAA0B3C,EAAS0B,EAAgB,GACpD,CAACA,EAAiB1B,IAcrB,OACI+C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAG9CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6BAGRF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,UAASF,SAAC,cACzBF,EAAAA,EAAAA,MAAA,UACIK,GAAG,UACHC,MAAO3B,EACP4B,SAxBaC,IACzB,MAAMC,EAAgBD,EAAEE,OAAOJ,MAC/BV,EAA0B3C,EAASwD,GACnClB,EAASb,EAAmB+B,IAC5BlB,EAAS1B,EAAiB,KAC1B0B,EAASvB,EAAoB,IAAI,EAmBSkC,SAAA,EAE9BC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,GAAEJ,SAAC,oBAEjBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,SAAQJ,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,OAAMJ,SAAC,gBAM7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,UAASF,SAAC,eACzBC,EAAAA,EAAAA,KAAA,SACI9C,KAAK,OACLgD,GAAG,UACHC,MAAOrD,EACPsD,SAAWC,GAAMZ,EAA0BY,EAAEE,OAAOJ,aAK5DN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SAAC,kBAG3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SAAA,IAAAS,OAChBnD,SAKbwC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAC,yBAG5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,SAChBxC,EAAgB,IAAAiD,OAAOjD,GAAgB,YAM5D,CCjGe,SAASkD,IAEpB,MAAMrB,GAAWC,EAAAA,EAAAA,MACXqB,GAAOpB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASkB,OAC3ClC,GAAkBc,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAAShB,kBAEtDmC,GAAkBrB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASmB,kBACtDC,GAActB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASqB,aAClDpD,GAAgB6B,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAAS/B,gBACpDqD,GAAgBxB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASsB,gBACpDhD,GAAmBwB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAAS1B,mBACvDiD,GAAgBzB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASuB,gBAE1DnB,EAAAA,WAAgB,KACZ,IAAKc,EAAM,OAEX,MACMM,EADYN,EAAKA,KAAKO,UACFC,MAAKF,GAA4B,qBAAjBA,EAAQG,OAE5CC,GADWJ,EAAUA,EAAQK,SAAW,IACrBH,MAAKE,GAAWA,EAAQD,OAAS3C,IACpDoC,EAAcQ,EAAUA,EAAQE,OAAOC,KAAIhC,GAASA,EAAM4B,OAAQ,GAClE5B,EAAQ6B,EAAUA,EAAQE,OAAOJ,MAAK3B,GAASA,EAAM4B,OAAS1D,IAAiB,KAC/EqD,EAAgBvB,EAAQA,EAAMiC,UAAUD,KAAIE,GAAYA,EAASN,OAAQ,GACzEM,EAAWlC,EAAQA,EAAMiC,UAAUN,MAAKO,GAAYA,EAASN,OAASrD,IAAoB,KAC1F4D,EAAQD,EAAWA,EAASC,MAAQ,KAE1CtC,EAAS5B,EAAUoD,IACnBxB,EAASzB,EAAiBmD,IAC1B1B,EAASrB,EAAiB2D,GAAO,GAElC,CAAChB,EAAMC,EAAiBnC,EAAiBf,EAAeK,EAAkBsB,IAoB7E,OACIS,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2CAA0CC,SAAA,EAErDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UAClCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oCAGRF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,cACPF,EAAAA,EAAAA,MAAA,UAAQM,MAAO3B,EAAiB4B,SAAWC,GA3B1BA,KACzB,MAAMC,EAAgBD,EAAEE,OAAOJ,MAC/Bf,EAASb,EAAmB+B,IAC5BlB,EAAS1B,EAAiB,KAC1B0B,EAASvB,EAAoB,IAAI,EAuBwB8D,CAAoBtB,GAAGN,SAAA,EACpEC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,GAAEJ,SAAC,oBACjBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,SAAQJ,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,OAAMJ,SAAC,gBAK7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,YACPF,EAAAA,EAAAA,MAAA,UAAQM,MAAO1C,EAAe2C,SAAWC,GA9B1BA,KACvB,MAAMC,EAAgBD,EAAEE,OAAOJ,MAC/Bf,EAAS1B,EAAiB4C,IAC1BlB,EAASvB,EAAoB,IAAI,EA2BsB+D,CAAkBvB,GAAGN,SAAA,EAChEC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,GAAEJ,SAAC,iBAChBa,EAAcA,EAAYW,KAAIhC,IAASS,EAAAA,EAAAA,KAAA,UAAoBG,MAAOZ,EAAMQ,SAAER,GAAtBA,KAAyC,YAItGM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eACPF,EAAAA,EAAAA,MAAA,UAAQM,MAAOrC,EAAkBsC,SAAWC,GAhC1BA,KAC1B,MAAMC,EAAgBD,EAAEE,OAAOJ,MAC/Bf,EAASvB,EAAoByC,GAAe,EA8BcuB,CAAqBxB,GAAGN,SAAA,EACtEC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,GAAEJ,SAAC,oBAChBe,EAAgBA,EAAcS,KAAIE,IAAYzB,EAAAA,EAAAA,KAAA,UAAuBG,MAAOsB,EAAS1B,SAAE0B,GAA5BA,KAAkD,YAKtH5B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAC,0BAG5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,SAChBgB,EAAa,IAAAP,OAAOO,GAAa,YAMtD,CC1GO,MAAMe,EAAaA,KACtB,MACMC,EAAQ,GACd,IAAK,IAAIC,GAFW,IAAIC,MAAOC,cAELF,GAAK,KAAMA,IACjCD,EAAMI,KAAKH,GAGf,OADAD,EAAMI,KAAK,iBACJJ,CAAK,EAIHK,EAAuBA,CAAC1D,EAAWE,EAAYyD,EAAeC,KAEvE,GAAkB,sBAAd5D,GAAoD,wBAAfE,IAAyCyD,IAAkBC,EAChG,OAAO,EAGX,GAAsB,MAAlBD,GAA2C,KAAlBA,EAAsB,OAAO,EAC1D,GAAyB,MAArBA,EAAc,IAAmC,MAArBA,EAAc,IAAmC,MAArBA,EAAc,IAAmC,MAArBA,EAAc,GAAY,CAC9G,IAAIE,EAAa,GACbC,EAAkB,GACtB,MAAMC,EAAmBJ,EAAcK,QAAQ,KACzCC,EAAkBN,EAAcK,QAAQ,KAEvBH,EAAvBI,GAAmB,EAAiBN,EAAcO,MAAM,EAAGD,GAAgCN,EAAcO,MAAM,EAAGH,GAE3FD,EAAvBG,GAAmB,EAAsBN,EAAcO,MAAMD,EAAkB,GAAuBN,EAAcO,MAAMH,EAAmB,GAE7I,MAAMI,EAAgBC,SAASP,GACzBQ,EAAqBD,SAASN,GAEpCH,EAAgC,IAAhBQ,EACER,GAAlBG,EAAwD,IAArBO,EAA4C,CAEnF,CAEA,MAAMjE,EAAagE,SAAST,GAEtBW,GADc,IAAIf,MAAOC,cACFxD,EAC7B,IAAIuE,EAAS,EAgHb,MA9GmB,QAAfrE,GAAuC,WAAfA,IAEpBqE,EADAD,GAAU,EACY,IAAblE,EAEJkE,GAAU,EACO,IAAblE,EAEJkE,GAAU,EACO,IAAblE,EAEJkE,GAAU,EACO,EAAblE,EAEJkE,GAAU,EACO,GAAblE,EAEJkE,GAAU,EACO,GAAblE,EAEJkE,GAAU,GACO,IAAblE,EAEJkE,GAAU,GACO,IAAblE,EAEJkE,GAAU,GACO,IAAblE,EAEJkE,GAAU,GACO,IAAblE,EAEJkE,GAAU,GACO,IAAblE,EAEJkE,EAAS,IAAMA,GAAU,GACR,IAAblE,EAEa,EAAbA,EAGbmE,GAAU,IACVA,GAAU,IACVA,GAAwB,KAAbnE,EACXmE,GAAU,GACVA,GAAU,GACVA,GAAU,IAIK,aAAfrE,IAEAqE,GAAU,IACVA,GAAU,IACVA,GAAU,GACVA,GAAU,GACVA,GAAU,IAGK,WAAfrE,IAGIqE,EADAD,GAAU,EACY,GAAblE,EAEJkE,GAAU,EACO,IAAblE,EAEJkE,GAAU,EACO,IAAblE,EAEJkE,GAAU,EACO,GAAblE,EAEJkE,GAAU,EACO,IAAblE,EAEJkE,GAAU,EACO,GAAblE,EAEJkE,GAAU,EACO,GAAblE,EAEJkE,GAAU,GACO,IAAblE,EAEJkE,GAAU,GACO,IAAblE,EAEJkE,GAAU,GACO,IAAblE,EAEJkE,GAAU,GACO,IAAblE,EAEJkE,GAAU,GACO,IAAblE,EAEJkE,EAAS,IAAMA,GAAU,GACR,IAAblE,EAEa,EAAbA,EAGbmE,GAAU,IACVA,GAAU,IACVA,GAAwB,KAAbnE,EACXmE,GAAU,GACVA,GAAU,GACVA,GAAU,IAGPC,KAAKC,MAAOF,EAASX,EAAwB,IAAM,EAAE,ECjJjD,SAASc,IAEpB,MAAMhE,GAAWC,EAAAA,EAAAA,MACXX,GAAYY,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASd,YAChDE,GAAaU,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASZ,aACjDE,GAAaQ,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASV,aACjDE,GAAaM,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASR,aACjDsD,GAAuBhD,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAAS8C,uBA6BjE,OACIzC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCC,SAAA,EAE7CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UAClCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BAGRF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBACPF,EAAAA,EAAAA,MAAA,UAAQM,MAAOzB,EAAW0B,SAAWC,GAnClBA,KAC3B,MAAMC,EAAgBD,EAAEE,OAAOJ,MACzBnB,EAAaoD,EAAqB9B,EAAe1B,EAAYE,EAAYwD,GAC/ElD,EAASX,EAAa6B,IACtBlB,EAASL,EAAcC,GAAY,EA+BgBqE,CAAsBhD,GAAGN,SAAA,EAChEC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,oBAAmBJ,SAAC,sBACjC+B,EAAaA,IAAaP,KAAI7C,IAAasB,EAAAA,EAAAA,KAAA,UAAwBG,MAAOzB,EAAUqB,SAAErB,GAA9BA,KAAqD,YAItHmB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPF,EAAAA,EAAAA,MAAA,UAAQM,MAAOvB,EAAYwB,SAAWC,GApClBA,KAC5B,MAAMC,EAAgBD,EAAEE,OAAOJ,MACzBnB,EAAaoD,EAAqB9B,EAAeA,EAAexB,EAAYwD,GAClFlD,EAAST,EAAc2B,IACvBlB,EAASL,EAAcC,GAAY,EAgCiBsE,CAAuBjD,GAAGN,SAAA,EAClEC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,sBAAqBJ,SAAC,yBACpCC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,MAAKJ,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,SAAQJ,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,WAAUJ,SAAC,cACzBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,SAAQJ,SAAC,kBAI/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAA,SAAO9C,KAAK,OAAOiD,MAAOrB,EAAYsB,SAAWC,GAxC7BA,KAC5B,MAAMC,EAAgBD,EAAEE,OAAOJ,MACzBnB,EAAaoD,EAAqB1D,EAAWE,EAAY0B,EAAegC,GAC9ElD,EAASP,EAAcyB,IACvBlB,EAASL,EAAcC,GAAY,EAoC4BuE,CAAuBlD,SAYlFR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAC,kBAG5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,SAAA,IAAAS,OACZxB,UAMzB,CCzFe,SAASwE,IA4BpB,OACIxD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BAahB,CC1Ce,SAAS0D,IAEpB,MAAMrE,GAAWC,EAAAA,EAAAA,MACXqB,GAAOpB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASkB,OAC3CxB,GAAgBI,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASN,gBACpD3B,GAAmB+B,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASjC,mBACvDyB,GAAaM,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASR,aACjDR,GAAkBc,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAAShB,kBACtDf,GAAgB6B,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAAS/B,gBACpDK,GAAmBwB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAAS1B,mBACvD4F,EAAwBC,KAAKC,MAAMD,KAAKE,UAAU3E,IACxDwE,EAAsBI,QAEtBlE,EAAAA,WAAgB,KACZ,IAAKc,EAAM,OACX,MAAMO,EAAYP,EAAKA,KAAKO,UAC5B7B,EAASH,EAAiBgC,GAAW,GACtC,CAACP,EAAMlC,EAAiBV,EAAkBL,IAK7C,MAAMsG,EAAkB,WAA6B,IAA5BC,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAE1C,MAAMG,EAAe7G,GAAsC,EACrD8G,EAAcrF,GAA0B,EAG9C,OADAsF,QAAQC,IAAI,eAAgBP,GACrBI,EAAeC,EAAc1E,WAAWqE,EACnD,EAEMQ,EAA2BxD,IAC7B,IAAIiC,EAAS,EAEb,GAAIzE,GAAmBf,GAAiBK,EAAkB,CACtD,MAAMuD,EAAWL,EAAUA,EAAQK,SAAW,GACxCD,EAAkB,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUH,MAAKE,GAAWA,EAAQD,OAAS3C,IACrD8C,EAAgB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASE,OAClB/B,EAAc,OAAN+B,QAAM,IAANA,OAAM,EAANA,EAAQJ,MAAK3B,GAASA,EAAM4B,OAAS1D,IAC7C+D,EAAiB,OAALjC,QAAK,IAALA,OAAK,EAALA,EAAOiC,UACnBC,EAAoB,OAATD,QAAS,IAATA,OAAS,EAATA,EAAWN,MAAKO,GAAYA,EAASN,OAASrD,IAE/DmF,GADsB,OAARxB,QAAQ,IAARA,OAAQ,EAARA,EAAUC,KAE5B,CACA,OAAOuB,CAAM,EAiDjB,OACIpD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,SAAC,oBAGtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAAC,oBAG9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,SAAC,0BAGrCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAC,mBAG7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAC,aAGvBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,SAAC,gBA7DzB2D,EAAsBnC,KAAIP,IAGzBnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SACxBiB,EAAQG,QAEbnB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UACzBC,EAAAA,EAAAA,KAAA,OAAKyE,IAAI,oHAEbzE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACrBxC,EAAgB,IAAAiD,OAAOjD,GAAqB,UAGrDyC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACrByE,EAAwBxD,GAAQ,IAAAR,OAAOgE,EAAwBxD,IAAa,UAGrFhB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACrBf,EAAU,IAAAwB,OAAOxB,GAAe,UAGzCgB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACrBgE,IAAiB,IAAAvD,OAAOuD,EAAgBS,EAAwBxD,KAAc,UAGvFhB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAC1BiB,EAAQ0D,UAEb1E,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBA/BmBiB,EAAQG,UAiE3D,C,uBCzH2BwD,EAYW,GAADnE,OAAIoE,OAAOnD,SAASoD,OAAM,QAZ3BC,EAYmC,CAAC,EAX7DC,IAAAA,OAAa,CAChBJ,UACAG,QAAS,CACLE,OAAQ,mBACR,eAAgB,sBACbF,KANWG,IAACN,EAASG,EAcpC,MCeaI,EAAaA,IACfH,IAAAA,IACE,wBAAyB,CAAEI,OAAQ,CAAC,IACxCC,MAAMC,GACIA,EAAS3E,OCzBb,SAAS4E,IAEpB,MAAMlG,GAAWC,EAAAA,EAAAA,OACVb,EAAiB+G,IAAsBC,EAAAA,EAAAA,UAAS,IAmBvD,OAjBA5F,EAAAA,WAAgB,KACI6F,WACZ,IACIrG,EAASf,GAAW,IACpBe,EAASjB,EAAS,OAClB,MAAMuH,QAAaR,IACnB9F,EAASnB,EAAeyH,IACxBtG,EAASf,GAAW,GACxB,CAAE,MAAOsH,GACLvG,EAASjB,EAASwH,IAClBvG,EAASf,GAAW,GACxB,GAEJuH,EAAS,GACV,KAIC/F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAEzBC,EAAAA,EAAAA,KAACwD,EAAU,KAGX3D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACjBC,EAAAA,EAAAA,KAACb,EAAqB,CAACX,gBAAiBA,EAAiB+G,mBAAoBA,KAC7EvF,EAAAA,EAAAA,KAACS,EAAyB,CAACjC,gBAAiBA,EAAiB+G,mBAAoBA,KACjFvF,EAAAA,EAAAA,KAACoD,EAAiB,QAItBpD,EAAAA,EAAAA,KAACyD,EAAU,MAGvB,C","sources":["components/pages/calc/subCalcs/auctionCostSection/AuctionCostUtils.js","redux/actions/calcActions.js","components/pages/calc/subCalcs/auctionCostSection/AuctionCostSection.jsx","components/pages/calc/subCalcs/transportationCostSection/TransportationCostSection.jsx","components/pages/calc/subCalcs/importCostSection/ImportCostUtils.js","components/pages/calc/subCalcs/importCostSection/ImportCostSection.jsx","components/pages/calc/calcHeader/CalcHeader.jsx","components/pages/calc/calcFooter/CalcFooter.jsx","axios/customAxios.js","axios/DataLoader.js","components/pages/calc/Calc.jsx"],"sourcesContent":["\n\nexport const copartCalc = (carCost) => {\n\n    let total = 0;\n\n    if (!carCost || carCost == 0) {\n        return 0;\n    }\n\n    //High Volume Buyer Fee\n    if (carCost < 99.99) {\n        total += 1;\n    }\n    else if (carCost < 199.99) {\n        total += 25;\n    }\n    else if (carCost < 299.99) {\n        total += 60;\n    }\n    else if (carCost < 349.99) {\n        total += 80;\n    }\n    else if (carCost < 399.99) {\n        total += 90;\n    }\n    else if (carCost < 449.99) {\n        total += 120;\n    }\n    else if (carCost < 499.99) {\n        total += 130;\n    }\n    else if (carCost < 549.99) {\n        total += 140;\n    }\n    else if (carCost < 599.99) {\n        total += 150;\n    }\n    else if (carCost < 699.99) {\n        total += 165;\n    }\n    else if (carCost < 799.99) {\n        total += 185;\n    }\n    else if (carCost < 899.99) {\n        total += 200;\n    }\n    else if (carCost < 999.99) {\n        total += 215;\n    }\n    else if (carCost < 1199.99) {\n        total += 230;\n    }\n    else if (carCost < 1299.99) {\n        total += 255;\n    }\n    else if (carCost < 1399.99) {\n        total += 275;\n    }\n    else if (carCost < 1499.99) {\n        total += 280;\n    }\n    else if (carCost < 1599.99) {\n        total += 290;\n    }\n    else if (carCost < 1699.99) {\n        total += 305;\n    }\n    else if (carCost < 1799.99) {\n        total += 315;\n    }\n    else if (carCost < 1999.99) {\n        total += 325;\n    }\n    else if (carCost < 2399.99) {\n        total += 355;\n    }\n    else if (carCost < 2499.99) {\n        total += 380;\n    }\n    else if (carCost < 2999.99) {\n        total += 400;\n    }\n    else if (carCost < 3499.99) {\n        total += 450;\n    }\n    else if (carCost < 3999.99) {\n        total += 500;\n    }\n    else if (carCost < 4499.99) {\n        total += 600;\n    }\n    else if (carCost < 4999.99) {\n        total += 625;\n    }\n    else if (carCost < 5999.99) {\n        total += 650;\n    }\n    else if (carCost < 6499.99) {\n        total += 675;\n    }\n    else if (carCost < 6999.99) {\n        total += 675;\n    }\n    else if (carCost < 7499.99) {\n        total += 700;\n    }\n    else if (carCost < 7999.99) {\n        total += 700;\n    }\n    else if (carCost < 8499.99) {\n        total += 725;\n    }\n    else if (carCost < 8999.99) {\n        total = 725\n    }\n    else if (carCost < 9999.99) {\n        total += 725;\n    }\n    else if (carCost < 10499.99) {\n        total += 750;\n    }\n    else if (carCost < 10999.99) {\n        total += 750;\n    }\n    else if (carCost < 11499.99) {\n        total += 750;\n    }\n    else if (carCost < 11999.99) {\n        total += 760;\n    }\n    else if (carCost < 12499.99) {\n        total += 775;\n    }\n    else if (carCost < 14999.99) {\n        total += 790;\n    }\n    else if (carCost > 14999.99) {\n        total += (carCost * .06);\n    }\n\n\n\n    //Internet bid fee Live online bid fee\n    if (carCost < 499.99) {\n        total += 49;\n    }\n    else if (carCost < 999.99) {\n        total += 59;\n    }\n    else if (carCost < 1499.99) {\n        total += 79;\n    }\n    else if (carCost < 1999.99) {\n        total += 89;\n    }\n    else if (carCost < 3999.99) {\n        total += 99;\n    }\n    else if (carCost < 5999.99) {\n        total += 109;\n    }\n    else if (carCost < 7999.99) {\n        total += 139;\n    }\n    else if (carCost > 7999.99) {\n        total = total + 149;\n    }\n\n\n    total += 10; //Eviromental fee\n    total += 20; //Title fee\n    total += 79; //Documentation fee\n\n    return total;\n}\n\n\nexport const iaaiCalc = (carCost) => {\n\n    let total = 0;\n\n    if (!carCost || carCost == 0) {\n        return 0;\n    }\n\n\n    //High Volume Buyer Fee\n    if (carCost < 99.99) {\n        total += 1;\n    }\n    else if (carCost < 199.99) {\n        total += 25;\n    }\n    else if (carCost < 299.99) {\n        total += 60;\n    }\n    else if (carCost < 349.99) {\n        total += 80;\n    }\n    else if (carCost < 399.99) {\n        total += 90;\n    }\n    else if (carCost < 449.99) {\n        total += 120;\n    }\n    else if (carCost < 499.99) {\n        total += 130;\n    }\n    else if (carCost < 549.99) {\n        total += 140;\n    }\n    else if (carCost < 599.99) {\n        total += 150;\n    }\n    else if (carCost < 699.99) {\n        total += 165;\n    }\n    else if (carCost < 799.99) {\n        total += 185;\n    }\n    else if (carCost < 899.99) {\n        total += 200;\n    }\n    else if (carCost < 999.99) {\n        total += 215;\n    }\n    else if (carCost < 1199.99) {\n        total += 230;\n    }\n    else if (carCost < 1299.99) {\n        total += 255;\n    }\n    else if (carCost < 1399.99) {\n        total += 275;\n    }\n    else if (carCost < 1499.99) {\n        total += 280;\n    }\n    else if (carCost < 1599.99) {\n        total += 290;\n    }\n    else if (carCost < 1699.99) {\n        total += 305;\n    }\n    else if (carCost < 1799.99) {\n        total += 315;\n    }\n    else if (carCost < 1999.99) {\n        total += 325;\n    }\n    else if (carCost < 2399.99) {\n        total += 355;\n    }\n    else if (carCost < 2499.99) {\n        total += 380;\n    }\n    else if (carCost < 2999.99) {\n        total += 400;\n    }\n    else if (carCost < 3499.99) {\n        total += 450;\n    }\n    else if (carCost < 3999.99) {\n        total += 500;\n    }\n    else if (carCost < 4499.99) {\n        total += 600;\n    }\n    else if (carCost < 4999.99) {\n        total += 625;\n    }\n    else if (carCost < 5999.99) {\n        total += 650;\n    }\n    else if (carCost < 6499.99) {\n        total += 675;\n    }\n    else if (carCost < 6999.99) {\n        total += 675;\n    }\n    else if (carCost < 7499.99) {\n        total += 700;\n    }\n    else if (carCost < 7999.99) {\n        total += 700;\n    }\n    else if (carCost < 8499.99) {\n        total += 725;\n    }\n    else if (carCost < 8999.99) {\n        total = 725\n    }\n    else if (carCost < 9999.99) {\n        total += 725;\n    }\n    else if (carCost < 10499.99) {\n        total += 750;\n    }\n    else if (carCost < 10999.99) {\n        total += 750;\n    }\n    else if (carCost < 11499.99) {\n        total += 750;\n    }\n    else if (carCost < 11999.99) {\n        total += 760;\n    }\n    else if (carCost < 12499.99) {\n        total += 775;\n    }\n    else if (carCost < 14999.99) {\n        total += 790;\n    }\n    else if (carCost > 14999.99) {\n        total += (carCost * .06);\n    }\n\n    //Internet bid fee Live online bid fee\n    if (carCost < 499.99) {\n        total += 49;\n    }\n    else if (carCost < 999.99) {\n        total += 59;\n    }\n    else if (carCost < 1499.99) {\n        total += 79;\n    }\n    else if (carCost < 1999.99) {\n        total += 89;\n    }\n    else if (carCost < 3999.99) {\n        total += 99;\n    }\n    else if (carCost < 5999.99) {\n        total += 109;\n    }\n    else if (carCost < 7999.99) {\n        total += 139;\n    }\n    else if (carCost > 7999.99) {\n        total = total + 149;\n    }\n\n    total += 10; //Eviromental fee\n    total += 35; //Broker fee \n    total += 79; //Documentation fee\n\n    return total;\n}\n","\nexport const SetCarCost = (carCost) => ({\n    type: 'SET_CAR_COST',\n    payload: carCost,\n});\n\nexport const SetAuctionFee = (auctionFee) => ({\n    type: 'SET_AUCTION_FEE',\n    payload: auctionFee,\n});\n\nexport const SetTotalAuctionCost = (totalAuctionCost) => ({\n    type: 'SET_TOTAL_AUCTION_COST',\n    payload: totalAuctionCost,\n});\n\nexport const SetSelectedCompany = (selectedCompany) => ({\n    type: 'SET_SELECTED_COMPANY',\n    payload: selectedCompany,\n});\n\nexport const SetCompanyNames = (companyNames) => ({\n    type: 'SET_COMPANY_NAMES',\n    payload: companyNames,\n});\n\nexport const SetAuctionNames = (auctionNames) => ({\n    type: 'SET_AUCTION_NAMES',\n    payload: auctionNames,\n});\n\nexport const SetStates = (selectedState) => ({\n    type: 'SET_STATES',\n    payload: selectedState,\n});\n\nexport const SetSelectedState = (selectedState) => ({\n    type: 'SET_SELECTED_STATE',\n    payload: selectedState,\n});\n\nexport const SetLocationNames = (locationList) => ({\n    type: 'SET_LOCATION_NAMES',\n    payload: locationList,\n});\n\nexport const SetSelectedLocation = (selectedLocation) => ({\n    type: 'SET_SELECTED_LOCATION',\n    payload: selectedLocation,\n});\n\nexport const SetLocationPrice = (locationPrices) => ({\n    type: 'SET_LOCATION_PRICE',\n    payload: locationPrices,\n});\n\nexport const SetCalcDataSet = (calcDataSet) => ({\n    type: 'SET_CALC_DATA_SET',\n    payload: calcDataSet,\n});\n\nexport const SetError = (error) => ({\n    type: 'SET_ERROR',\n    payload: error,\n});\n\nexport const SetLoading = (loading) => ({\n    type: 'SET_LOADING',\n    payload: loading,\n});\n\nexport const SetSelectedAuction = (selectedAuction) => ({\n    type: 'SET_SELECTED_AUCTION',\n    payload: selectedAuction,\n});\n\nexport const SetModelYear = (modelYear) => ({\n    type: 'SET_MODEL_YEAR',\n    payload: modelYear,\n});\n\nexport const SetEngineType = (engineType) => ({\n    type: 'SET_ENGINE_TYPE',\n    payload: engineType,\n});\n\nexport const SetEngineSize = (engineSize) => ({\n    type: 'SET_ENGINE_SIZE',\n    payload: engineSize,\n});\n\nexport const SetSteeringPosition = (steeringPosition) => ({\n    type: 'SET_STEERING_POSITION',\n    payload: steeringPosition,\n});\n\nexport const SetImportCost = (importCost) => ({\n    type: 'SET_IMPORT_COST',\n    payload: importCost,\n});\n\nexport const SetUsdToGelExchangeRate = (usdToGelExchangeRate) => ({\n    type: 'SET_USD_TO_GEL_EXCHANGE_RATE',\n    payload: usdToGelExchangeRate,\n});\n\nexport const SetCompaniesList = (companiesList) => ({\n    type: 'SET_COMPANIES_LIST',\n    payload: companiesList,\n});\n\n\n\n// Compare this snippet from carvanna/src/redux/actions/calcActions.js:","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { copartCalc, iaaiCalc } from './AuctionCostUtils';\nimport './AuctionCostSection.scss';\nimport { SetSelectedAuction, SetCarCost, SetAuctionFee, SetTotalAuctionCost, SetSelectedState, SetSelectedLocation } from '../../../../../redux/actions/calcActions';\n\nexport default function AuctionCarCostSection() {\n\n    const dispatch = useDispatch();\n    // const auctionNames = useSelector(state => state.calcData.auctionNames);\n    const selectedAuction = useSelector(state => state.calcData.selectedAuction);\n    const auctionFee = useSelector(state => state.calcData.auctionFee);\n    const totalAuctionCost = useSelector(state => state.calcData.totalAuctionCost);\n    const carCost = useSelector(state => state.calcData.carCost);\n\n    const calculateTotalAuctionCost = (carCost, selectedAuction) => {\n        // Implement your logic to calculate the total auction cost based on carCost\n        let calculatedAuctionCost = 0;\n        switch (selectedAuction) {\n            case 'Copart':\n                calculatedAuctionCost = copartCalc(carCost);\n                break;\n            case 'IAAI':\n                calculatedAuctionCost = iaaiCalc(carCost);\n                break;\n            default:\n                calculatedAuctionCost = 0;\n                break;\n        }\n        dispatch(SetCarCost(carCost));\n        dispatch(SetAuctionFee(calculatedAuctionCost));\n        dispatch(SetTotalAuctionCost(parseFloat(carCost) + calculatedAuctionCost));\n        return calculatedAuctionCost;\n\n    };\n\n    React.useEffect(() => {\n        if (!selectedAuction) return;\n        calculateTotalAuctionCost(carCost, selectedAuction);\n    }, [selectedAuction, carCost]);\n\n\n    const handleAuctionChange = (e) => {\n        const selectedValue = e.target.value;\n        calculateTotalAuctionCost(carCost, selectedValue);\n        dispatch(SetSelectedAuction(selectedValue));\n        dispatch(SetSelectedState(''));\n        dispatch(SetSelectedLocation(''));\n\n    };\n\n\n\n    return (\n        <div className=\"calc-section calc-section-auction\">\n\n            {/* Auction Section */}\n            <div className=\"auction-header\">\n                <h2>Auction Cost Section:</h2>\n            </div>\n\n            <div className='auction-section'>\n                <label htmlFor=\"auction\">Auction:</label>\n                <select\n                    id=\"auction\"\n                    value={selectedAuction}\n                    onChange={handleAuctionChange}\n                >\n                    <option value=\"\">Select Auction</option>\n\n                    <option value=\"Copart\">Copart</option>\n                    <option value=\"IAAI\">IAAI</option>\n                    {/* {auctionNames ? auctionNames.map(auction => <option key={auction} value={auction}>{auction}</option>) : null} */}\n                </select>\n            </div>\n\n            {/* Car Cost Section */}\n            <div className=\"car-section\">\n                <label htmlFor=\"carCost\">Car Cost:</label>\n                <input\n                    type=\"text\"\n                    id=\"carCost\"\n                    value={carCost}\n                    onChange={(e) => calculateTotalAuctionCost(e.target.value)}\n                />\n            </div>\n\n            {/* Auction Fee Cost Section */}\n            <div className=\"total-fee-cost\">\n                <div className=\"fee-label\">\n                    Auction Fee:\n                </div>\n                <div className=\"fee-cost\">\n                    {`$${auctionFee}`}\n                </div>\n            </div>\n\n            {/* Total Cost Section */}\n            <div className=\"total-cost\">\n                <div className=\"cost-label\">\n                    Total Auction Cost:\n                </div>\n                <div className=\"cost\">\n                    {totalAuctionCost ? `$${totalAuctionCost}` : `$0`}\n                </div>\n            </div>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    SetSelectedAuction,\n    SetStates,\n    SetSelectedState,\n    SetLocationNames,\n    SetSelectedLocation,\n    SetLocationPrice\n} from '../../../../../redux/actions/calcActions';\nimport './TransportationCostSection.scss';\n\nexport default function TransportationCostSection() {\n\n    const dispatch = useDispatch();\n    const data = useSelector(state => state.calcData.data);\n    const selectedAuction = useSelector(state => state.calcData.selectedAuction);\n    // const auctionNames = useSelector(state => state.calcData.auctionNames);\n    const selectedCompany = useSelector(state => state.calcData.selectedCompany);\n    const statesNames = useSelector(state => state.calcData.stateNames);\n    const selectedState = useSelector(state => state.calcData.selectedState);\n    const locationNames = useSelector(state => state.calcData.locationNames);\n    const selectedLocation = useSelector(state => state.calcData.selectedLocation);\n    const locationPrice = useSelector(state => state.calcData.locationPrice);\n\n    React.useEffect(() => {\n        if (!data) return;\n\n        const companies = data.data.companies;\n        const company = companies.find(company => company.name === \"Estimated Prices\");\n        const auctions = company ? company.auctions : [];\n        const auction = auctions.find(auction => auction.name === selectedAuction);\n        const statesNames = auction ? auction.states.map(state => state.name) : [];\n        const state = auction ? auction.states.find(state => state.name === selectedState) : null;\n        const locationNames = state ? state.locations.map(location => location.name) : [];\n        const location = state ? state.locations.find(location => location.name === selectedLocation) : null;\n        const price = location ? location.price : null;\n\n        dispatch(SetStates(statesNames));\n        dispatch(SetLocationNames(locationNames));\n        dispatch(SetLocationPrice(price));\n\n    }, [data, selectedCompany, selectedAuction, selectedState, selectedLocation, dispatch]);\n\n    const handleAuctionChange = (e) => {\n        const selectedValue = e.target.value;\n        dispatch(SetSelectedAuction(selectedValue));\n        dispatch(SetSelectedState(''));\n        dispatch(SetSelectedLocation(''));\n    };\n\n    const handleStateChange = (e) => {\n        const selectedValue = e.target.value;\n        dispatch(SetSelectedState(selectedValue));\n        dispatch(SetSelectedLocation(''));\n    }\n\n    const handleLocationChange = (e) => {\n        const selectedValue = e.target.value;\n        dispatch(SetSelectedLocation(selectedValue));\n    }\n\n    return (\n        <div className=\"calc-section calc-section-transportation\">\n\n            <div className=\"transposration-header\">\n                <h2>Transportation Cost Section:</h2>\n            </div>\n\n            <div className='auction-section'>\n                <label>Auction:</label>\n                <select value={selectedAuction} onChange={(e) => handleAuctionChange(e)}>\n                    <option value=\"\">Select Auction</option>\n                    <option value=\"Copart\">Copart</option>\n                    <option value=\"IAAI\">IAAI</option>\n                    {/* {auctionNames ? auctionNames.map(auction => <option key={auction} value={auction}>{auction}</option>) : null} */}\n                </select>\n            </div>\n\n            <div className=\"state-section\">\n                <label>State:</label>\n                <select value={selectedState} onChange={(e) => handleStateChange(e)}>\n                    <option value=\"\">Select State</option>\n                    {statesNames ? statesNames.map(state => <option key={state} value={state}>{state}</option>) : null}\n                </select>\n            </div>\n\n            <div className=\"location-section\">\n                <label>Location:</label>\n                <select value={selectedLocation} onChange={(e) => handleLocationChange(e)}>\n                    <option value=\"\">Select Location</option>\n                    {locationNames ? locationNames.map(location => <option key={location} value={location}>{location}</option>) : null}\n                </select>\n\n            </div>\n\n            <div className=\"transportation-price\">\n                <div className=\"cost-label\">\n                    Transportation Cost:\n                </div>\n                <div className=\"cost\">\n                    {locationPrice ? `$${locationPrice}` : `$0`}\n                </div>\n            </div>\n\n        </div>\n    );\n}\n","\nexport const modelYears = () => {\n    const currentYear = new Date().getFullYear()\n    const years = []\n    for (let i = currentYear; i >= 1984; i--) {\n        years.push(i)\n    }\n    years.push(`1983 or older`)\n    return years\n}\n\n\nexport const importCostCalculator = (modelYear, engineType, engineSizeStr, usdToGelExchangeRate) => {\n\n    if (modelYear === 'Pick a Model Year' || engineType === 'Pick an Engine Type' || !engineSizeStr || !usdToGelExchangeRate) {\n        return 0\n    }\n\n    if (engineSizeStr === '0' || engineSizeStr === '') return 0;\n    if (engineSizeStr[1] === '.' || engineSizeStr[1] === ',' || engineSizeStr[2] === ',' || engineSizeStr[2] === '.') {\n        let firstDigit = '';\n        let remainingDigits = ''\n        const positonOfDecimal = engineSizeStr.indexOf('.')\n        const positionOfComma = engineSizeStr.indexOf(',')\n\n        positionOfComma > -1 ? firstDigit = engineSizeStr.slice(0, positionOfComma) : firstDigit = engineSizeStr.slice(0, positonOfDecimal)\n\n        positionOfComma > -1 ? remainingDigits = engineSizeStr.slice(positionOfComma + 1) : remainingDigits = engineSizeStr.slice(positonOfDecimal + 1)\n\n        const intFirstDigit = parseInt(firstDigit);\n        const intRemainingDigits = parseInt(remainingDigits);\n\n        engineSizeStr = intFirstDigit * 1000;\n        remainingDigits ? engineSizeStr += intRemainingDigits * 100 : engineSizeStr += 0;\n\n    }\n\n    const engineSize = parseInt(engineSizeStr);\n    const currentYear = new Date().getFullYear()\n    const carAge = currentYear - modelYear;\n    let output = 0;\n\n    if (engineType === \"Gas\" || engineType === \"Diesel\") {\n        if (carAge <= 2) {\n            output = engineSize * 1.5\n        }\n        else if (carAge <= 3) {\n            output = engineSize * 1.4\n        }\n        else if (carAge <= 4) {\n            output = engineSize * 1.2\n        }\n        else if (carAge <= 5) {\n            output = engineSize * 1\n        }\n        else if (carAge <= 8) {\n            output = engineSize * 0.8\n        }\n        else if (carAge <= 9) {\n            output = engineSize * 0.9\n        }\n        else if (carAge <= 10) {\n            output = engineSize * 1.1\n        }\n        else if (carAge <= 11) {\n            output = engineSize * 1.3\n        }\n        else if (carAge <= 12) {\n            output = engineSize * 1.5\n        }\n        else if (carAge <= 13) {\n            output = engineSize * 1.8\n        }\n        else if (carAge <= 14) {\n            output = engineSize * 2.1\n        }\n        else if (carAge > 14 && carAge <= 40) {\n            output = engineSize * 2.4\n        } else {\n            output = engineSize * 1\n        }\n\n        output += 150; // add customs fee\n        output += 200; // add registration fee\n        output += (engineSize * 0.058) // add import fee\n        output += 30 // add inspection fee\n        output += 50 // add customs declaration fee\n        output += 50 // add internal transit fee\n\n    }\n\n    if (engineType === \"Electric\") {\n\n        output += 150; // add customs fee\n        output += 200; // add registration fee\n        output += 30 // add inspection fee\n        output += 50 // add customs declaration fee\n        output += 50 // add internal transit fee\n    }\n\n    if (engineType === \"Hybrid\") {\n\n        if (carAge <= 2) {\n            output = engineSize * 0.6\n        }\n        else if (carAge <= 3) {\n            output = engineSize * 0.56\n        }\n        else if (carAge <= 4) {\n            output = engineSize * 0.48\n        }\n        else if (carAge <= 5) {\n            output = engineSize * 0.4\n        }\n        else if (carAge <= 6) {\n            output = engineSize * 0.32\n        }\n        else if (carAge <= 8) {\n            output = engineSize * 0.8\n        }\n        else if (carAge <= 9) {\n            output = engineSize * 0.9\n        }\n        else if (carAge <= 10) {\n            output = engineSize * 1.1\n        }\n        else if (carAge <= 11) {\n            output = engineSize * 1.3\n        }\n        else if (carAge <= 12) {\n            output = engineSize * 1.5\n        }\n        else if (carAge <= 13) {\n            output = engineSize * 1.8\n        }\n        else if (carAge <= 14) {\n            output = engineSize * 2.1\n        }\n        else if (carAge > 14 && carAge <= 40) {\n            output = engineSize * 2.4\n        } else {\n            output = engineSize * 1\n        }\n\n        output += 150; // add customs fee\n        output += 200; // add registration fee\n        output += (engineSize * 0.058) // add import fee\n        output += 30 // add inspection fee\n        output += 50 // add customs declaration fee\n        output += 50 // add internal transit fee\n    }\n\n    return Math.round((output / usdToGelExchangeRate) * 10) / 10;\n\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SetModelYear, SetEngineType, SetEngineSize, SetImportCost } from '../../../../../redux/actions/calcActions';\nimport { modelYears, importCostCalculator } from './ImportCostUtils';\nimport './ImportCostSection.scss';\n\n\nexport default function ImportCostSection() {\n\n    const dispatch = useDispatch();\n    const modelYear = useSelector(state => state.calcData.modelYear);\n    const engineType = useSelector(state => state.calcData.engineType);\n    const engineSize = useSelector(state => state.calcData.engineSize);\n    const importCost = useSelector(state => state.calcData.importCost);\n    const usdToGelExchangeRate = useSelector(state => state.calcData.usdToGelExchangeRate);\n    // const steeringPosition = useSelector(state => state.calcData.steeringPosition);\n\n    const handleModelYearChange = (e) => {\n        const selectedValue = e.target.value;\n        const importCost = importCostCalculator(selectedValue, engineType, engineSize, usdToGelExchangeRate);\n        dispatch(SetModelYear(selectedValue));\n        dispatch(SetImportCost(importCost));\n    }\n\n    const handleEngineTypeChange = (e) => {\n        const selectedValue = e.target.value;\n        const importCost = importCostCalculator(selectedValue, selectedValue, engineSize, usdToGelExchangeRate);\n        dispatch(SetEngineType(selectedValue));\n        dispatch(SetImportCost(importCost));\n    }\n\n    const handleEngineSizeChange = (e) => {\n        const selectedValue = e.target.value;\n        const importCost = importCostCalculator(modelYear, engineType, selectedValue, usdToGelExchangeRate);\n        dispatch(SetEngineSize(selectedValue));\n        dispatch(SetImportCost(importCost));\n    }\n\n    // const handleSteeringPositionChange = (e) => {\n    //     const selectedValue = e.target.value;\n    //     dispatch(SetSteeringPosition(selectedValue));\n    // }\n\n    return (\n        <div className=\"calc-section calc-section-import\">\n\n            <div className=\"transposration-header\">\n                <h2>Import Cost Section:</h2>\n            </div>\n\n            <div className='model-year-section'>\n                <label>Model Year:</label>\n                <select value={modelYear} onChange={(e) => handleModelYearChange(e)}>\n                    <option value=\"Pick a Model Year\">Pick a Model Year</option>\n                    {modelYears ? modelYears().map(modelYear => <option key={modelYear} value={modelYear}>{modelYear}</option>) : null}\n                </select>\n            </div>\n\n            <div className=\"engine-type\">\n                <label>Engine Type:</label>\n                <select value={engineType} onChange={(e) => handleEngineTypeChange(e)}>\n                    <option value=\"Pick an Engine Type\">Pick an Engine Type</option>\n                    <option value=\"Gas\">Gas</option>\n                    <option value=\"Diesel\">Diesel</option>\n                    <option value=\"Electric\">Electric</option>\n                    <option value=\"Hybrid\">Hybrid</option>\n                </select>\n            </div>\n\n            <div className=\"engine-size-section\">\n                <label>Engine Size:</label>\n                <input type=\"text\" value={engineSize} onChange={(e) => handleEngineSizeChange(e)} />\n            </div>\n\n            {/* <div className=\"steering-wheel-postion\">\n                <label>Steering Position:</label>\n                <select value={steeringPosition} onChange={(e) => handleSteeringPositionChange(e)}>\n                    <option value=\"Pick a Steering Position\">Pick a Steering Position</option>\n                    <option value=\"left\">Left</option>\n                    <option value=\"right\">Right</option>\n                </select>\n            </div> */}\n\n            <div className=\"import-cost\">\n                <div className=\"cost-label\">\n                    Import Cost:\n                </div>\n                <div className=\"cost\">\n                    {`$${importCost}`}\n                </div>\n            </div>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SetSelectedCompany, SetCompanyNames, SetAuctionNames, SetSelectedAuction, SetSelectedState, SetSelectedLocation } from '../../../../redux/actions/calcActions';\nimport \"./CalcHeader.scss\"\n\nexport default function CalcHeader() {\n    // const dispatch = useDispatch();\n    // const data = useSelector(state => state.calcData.data);\n    // console.log('data', data);\n    // const selectedCompany = useSelector(state => state.calcData.selectedCompany);\n    // let companyNames = useSelector(state => state.calcData.companyNames);\n\n    // React.useEffect(() => {\n    //     if (!data) return;\n\n    //     const companies = data.data.companies;\n    //     const companyNamesList = companies.map(company => company.name);\n    //     const company = companies.find(company => company.name === selectedCompany);\n    //     const auctionNames = company ? company.auctions.map(auction => auction.name) : [];\n\n    //     dispatch(SetAuctionNames(auctionNames));\n    //     dispatch(SetCompanyNames(companyNamesList));\n\n    // }, [data, selectedCompany]);\n\n    // const handleCompanyChange = (e) => {\n    //     const selectedValue = e.target.value;\n    //     dispatch(SetSelectedCompany(selectedValue));\n    //     dispatch(SetSelectedAuction(''));\n    //     dispatch(SetSelectedState(''));\n    //     dispatch(SetSelectedLocation(''));\n    // };\n\n    return (\n        <div className=\"calc-header\">\n            <h1>Bidder Cost Calculator</h1>\n            {/* <h3>Select company to calculate your car transportation and import cost</h3> \n            <div className='calc-header-sub'>\n                <div className='company-select'>\n                    <label>Select Company:</label>\n                    <select value={selectedCompany} onChange={(e) => handleCompanyChange(e)}>\n                        <option value=\"\">Select Company</option>\n                        {companyNames ? companyNames.map(company => <option key={company} value={company}>{company}</option>) : null}\n                    </select>\n                </div>\n            </div> */}\n        </div>\n    );\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SetCompaniesList } from '../../../../redux/actions/calcActions';\nimport \"./CalcFooter.scss\"\n\n\nexport default function CalcFooter() {\n\n    const dispatch = useDispatch();\n    const data = useSelector(state => state.calcData.data);\n    const companiesList = useSelector(state => state.calcData.companiesList);\n    const totalAuctionCost = useSelector(state => state.calcData.totalAuctionCost);\n    const importCost = useSelector(state => state.calcData.importCost);\n    const selectedAuction = useSelector(state => state.calcData.selectedAuction);\n    const selectedState = useSelector(state => state.calcData.selectedState);\n    const selectedLocation = useSelector(state => state.calcData.selectedLocation);\n    const companiesListInternal = JSON.parse(JSON.stringify(companiesList));\n    companiesListInternal.shift();\n\n    React.useEffect(() => {\n        if (!data) return;\n        const companies = data.data.companies;\n        dispatch(SetCompaniesList(companies));\n    }, [data, selectedAuction, selectedLocation, selectedState]);\n\n    // function with an optional parameter\n\n\n    const handleTotalCost = (transportationCost = 0) => {\n\n        const totalAuction = totalAuctionCost ? totalAuctionCost : 0;\n        const totalImport = importCost ? importCost : 0;\n\n        console.log(\"totalAuction\", transportationCost);\n        return totalAuction + totalImport + parseFloat(transportationCost);\n    }\n\n    const handleTransporationCost = (company) => {\n        let output = 0;\n\n        if (selectedAuction && selectedState && selectedLocation) {\n            const auctions = company ? company.auctions : [];\n            const auction = auctions?.find(auction => auction.name === selectedAuction);\n            const states = auction?.states;\n            const state = states?.find(state => state.name === selectedState);\n            const locations = state?.locations;\n            const location = locations?.find(location => location.name === selectedLocation);\n            const price = location?.price;\n            output += price;\n        }\n        return output;\n    }\n\n\n    const returnCompanyList = () => {\n\n        return companiesListInternal.map(company => {\n\n            return (\n                <div className=\"company-item\" key={company.name}>\n                    <div className=\"company-name\">\n                        {company.name}\n                    </div>\n                    <div className=\"company-logo\">\n                        <img src=\"https://png.pngtree.com/png-vector/20190225/ourmid/pngtree-circuit-logo-template-vector-png-image_704226.jpg\"></img>\n                    </div>\n                    <div className=\"cost-indicator\">\n                        <div className=\"sub-value\">\n                            {totalAuctionCost ? `$${totalAuctionCost}` : \"$0\"}\n                        </div>\n                    </div>\n                    <div className=\"cost-indicator\">\n                        <div className=\"sub-value\">\n                            {handleTransporationCost(company) ? `$${handleTransporationCost(company)}` : \"$0\"}\n                        </div>\n                    </div>\n                    <div className=\"cost-indicator\">\n                        <div className=\"sub-value\">\n                            {importCost ? `$${importCost}` : \"$0\"}\n                        </div>\n                    </div>\n                    <div className=\"cost-indicator\">\n                        <div className=\"sub-value\">\n                            {handleTotalCost() ? `$${handleTotalCost(handleTransporationCost(company))}` : \"$0\"}\n                        </div>\n                    </div>\n                    <div className=\"company-rating\">\n                        {company.rating}\n                    </div>\n                    <div className=\"view-more\">\n                        <button>\n                            View More\n                        </button>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    return (\n        <div className=\"footer-content\">\n            <div className=\"company-labels\">\n                <div className=\"name\">\n                    Company Name :\n                </div>\n                <div className=\"auction-cost\">\n                    Auction Cost :\n                </div>\n                <div className=\"transportation-cost\">\n                    Transporation Cost :\n                </div>\n                <div className=\"import-cost\">\n                    Import Cost :\n                </div>\n                <div className=\"total\">\n                    Total :\n                </div>\n                <div className=\"rating\">\n                    Rating :\n                </div>\n            </div>\n            {returnCompanyList()}\n        </div>\n    )\n}","import axios from 'axios';\n\n// Function to create a generic Axios instance with custom configuration\nconst createCustomAxios = (baseURL, headers) => {\n    return axios.create({\n        baseURL,\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            ...headers, // Spread the custom headers\n        },\n    });\n};\n\n// Example usage:\nconst customAxios = createCustomAxios(`${window.location.origin}/api`, {});\n\nexport default customAxios;\n","import axios from 'axios';\nimport customAxios from './customAxios';\n\n// Define the parameters for the request\nconst params = {\n    type: 'CustomerCosts',\n    location: 211,\n    sedan: 1,\n    suv: 0,\n    petrol: 1,\n    diesel: 0,\n    hybrid: 0,\n    electric: 0,\n    hasengine: 0,\n    price: 10000,\n    year: 2017,\n    capacity: 2200,\n};\n\n// Make a GET request with the defined parameters\nconst getData = () => {\n\n    return customAxios.get('/', { params })\n        .then(response => {\n            console.log('Response:', response.data);\n        })\n        .catch(error => {\n            console.error('Error:', error);\n        });\n\n}\n\nexport const getDataSet = () => {\n    return axios\n        .get('/apis/dummy_data.json', { params: {} })\n        .then((response) => {\n            return response.data;\n        });\n};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AuctionCarCostSection from './subCalcs/auctionCostSection/AuctionCostSection';\nimport TransportationCostSection from './subCalcs/transportationCostSection/TransportationCostSection';\nimport ImportCostSection from './subCalcs/importCostSection/ImportCostSection';\nimport CalcHeader from './calcHeader/CalcHeader';\nimport CalcFooter from './calcFooter/CalcFooter';\nimport { getDataSet } from '../../../axios/DataLoader';\nimport { SetCalcDataSet, SetError, SetLoading } from '../../../redux/actions/calcActions';\nimport './Calc.scss';\n\nexport default function Calc() {\n\n    const dispatch = useDispatch();\n    const [selectedAuction, setSelectedAuction] = useState('');\n    // get the data from api\n    React.useEffect(() => {\n        const process = async () => {\n            try {\n                dispatch(SetLoading(true));\n                dispatch(SetError(null));\n                const resp = await getDataSet();\n                dispatch(SetCalcDataSet(resp));\n                dispatch(SetLoading(false));\n            } catch (err) {\n                dispatch(SetError(err));\n                dispatch(SetLoading(false));\n            }\n        };\n        process();\n    }, []);\n\n\n    return (\n        <div className=\"page-content\">\n            {/* Select Transportation Company you want to calculate cost for: */}\n            <CalcHeader />\n\n            {/* Auction Car Cost Section */}\n            <div className=\"calc\">\n                <AuctionCarCostSection selectedAuction={selectedAuction} setSelectedAuction={setSelectedAuction} />\n                <TransportationCostSection selectedAuction={selectedAuction} setSelectedAuction={setSelectedAuction} />\n                <ImportCostSection />\n            </div>\n\n            {/* Companies List Section */}\n            <CalcFooter />\n        </div>\n    );\n}\n"],"names":["copartCalc","carCost","total","iaaiCalc","SetCarCost","type","payload","SetAuctionFee","auctionFee","SetTotalAuctionCost","totalAuctionCost","SetStates","selectedState","SetSelectedState","SetLocationNames","locationList","SetSelectedLocation","selectedLocation","SetLocationPrice","locationPrices","SetCalcDataSet","calcDataSet","SetError","error","SetLoading","loading","SetSelectedAuction","selectedAuction","SetModelYear","modelYear","SetEngineType","engineType","SetEngineSize","engineSize","SetImportCost","importCost","SetCompaniesList","companiesList","AuctionCarCostSection","dispatch","useDispatch","useSelector","state","calcData","calculateTotalAuctionCost","calculatedAuctionCost","parseFloat","React","_jsxs","className","children","_jsx","htmlFor","id","value","onChange","e","selectedValue","target","concat","TransportationCostSection","data","selectedCompany","statesNames","stateNames","locationNames","locationPrice","company","companies","find","name","auction","auctions","states","map","locations","location","price","handleAuctionChange","handleStateChange","handleLocationChange","modelYears","years","i","Date","getFullYear","push","importCostCalculator","engineSizeStr","usdToGelExchangeRate","firstDigit","remainingDigits","positonOfDecimal","indexOf","positionOfComma","slice","intFirstDigit","parseInt","intRemainingDigits","carAge","output","Math","round","ImportCostSection","handleModelYearChange","handleEngineTypeChange","handleEngineSizeChange","CalcHeader","CalcFooter","companiesListInternal","JSON","parse","stringify","shift","handleTotalCost","transportationCost","arguments","length","undefined","totalAuction","totalImport","console","log","handleTransporationCost","src","rating","baseURL","window","origin","headers","axios","Accept","createCustomAxios","getDataSet","params","then","response","Calc","setSelectedAuction","useState","async","resp","err","process"],"sourceRoot":""}