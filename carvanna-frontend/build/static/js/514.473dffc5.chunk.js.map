{"version":3,"file":"static/js/514.473dffc5.chunk.js","mappings":"yJAEO,MAAMA,EAAcC,IAEvB,IAAIC,EAAQ,EACRC,EAAUC,WAAWH,GAEzB,OAAKE,GAAuB,IAAZA,GAKZA,EAAU,MACVD,GAAS,EAEJC,EAAU,OACfD,GAAS,GAEJC,EAAU,OACfD,GAAS,GAEJC,EAAU,OACfD,GAAS,GAEJC,EAAU,OACfD,GAAS,GAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,SAGVA,EAAU,QAFfD,GAAS,IAKJC,EAAU,SAGVA,EAAU,QAFfD,GAAS,IAKJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,EAAQ,IAEHC,EAAU,QACfD,GAAS,IAEJC,EAAU,UAGVA,EAAU,UAGVA,EAAU,SALfD,GAAS,IAQJC,EAAU,SACfD,GAAS,IAEJC,EAAU,SACfD,GAAS,IAEJC,EAAU,SACfD,GAAS,IAEJC,EAAU,WACfD,GAAoB,IAAVC,GAMVA,EAAU,OACVD,GAAS,GAEJC,EAAU,OACfD,GAAS,GAEJC,EAAU,QACfD,GAAS,GAEJC,EAAU,QACfD,GAAS,GAEJC,EAAU,QACfD,GAAS,GAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,UACfD,GAAgB,KAIpBA,GAAS,GACTA,GAAS,GACTA,GAAS,GAEFA,GAvKI,CAuKC,EAIHG,EAAYJ,IAErB,IAAIC,EAAQ,EACRC,EAAUC,WAAWH,GAEzB,OAAKE,GAAuB,IAAZA,GAMZA,EAAU,MACVD,GAAS,EAEJC,EAAU,OACfD,GAAS,GAEJC,EAAU,OACfD,GAAS,GAEJC,EAAU,OACfD,GAAS,GAEJC,EAAU,OACfD,GAAS,GAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,OACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,SAGVA,EAAU,QAFfD,GAAS,IAKJC,EAAU,SAGVA,EAAU,QAFfD,GAAS,IAKJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,EAAQ,IAEHC,EAAU,QACfD,GAAS,IAEJC,EAAU,UAGVA,EAAU,UAGVA,EAAU,SALfD,GAAS,IAQJC,EAAU,SACfD,GAAS,IAEJC,EAAU,SACfD,GAAS,IAEJC,EAAU,SACfD,GAAS,IAEJC,EAAU,WACfD,GAAoB,IAAVC,GAIVA,EAAU,OACVD,GAAS,GAEJC,EAAU,OACfD,GAAS,GAEJC,EAAU,QACfD,GAAS,GAEJC,EAAU,QACfD,GAAS,GAEJC,EAAU,QACfD,GAAS,GAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,QACfD,GAAS,IAEJC,EAAU,UACfD,GAAgB,KAGpBA,GAAS,GACTA,GAAS,GACTA,GAAS,GAEFA,GArKI,CAqKC,EC7VHI,EAAcH,IAAO,CAC9BI,KAAM,eACNC,QAASL,IAGAM,EAAiBC,IAAU,CACpCH,KAAM,kBACNC,QAASE,IAGAC,EAAuBC,IAAgB,CAChDL,KAAM,yBACNC,QAASI,IAkBAC,EAAaC,IAAa,CACnCP,KAAM,aACNC,QAASM,IAGAC,EAAoBD,IAAa,CAC1CP,KAAM,qBACNC,QAASM,IAGAE,EAAoBC,IAAY,CACzCV,KAAM,qBACNC,QAASS,IAGAC,EAAuBC,IAAgB,CAChDZ,KAAM,wBACNC,QAASW,IAGAC,EAAoBC,IAAc,CAC3Cd,KAAM,qBACNC,QAASa,IAGAC,EAAkBC,IAAW,CACtChB,KAAM,oBACNC,QAASe,IAGAC,EAAYC,IAAK,CAC1BlB,KAAM,YACNC,QAASiB,IAGAC,EAAcC,IAAO,CAC9BpB,KAAM,cACNC,QAASmB,IAGAC,EAAsBC,IAAe,CAC9CtB,KAAM,uBACNC,QAASqB,IAGAC,EAAgBC,IAAS,CAClCxB,KAAM,iBACNC,QAASuB,IAGAC,EAAiBC,IAAU,CACpC1B,KAAM,kBACNC,QAASyB,IAGAC,EAAiBC,IAAU,CACpC5B,KAAM,kBACNC,QAAS2B,IAQAC,EAAiBC,IAAU,CACpC9B,KAAM,kBACNC,QAAS6B,IAQAC,EAAoBC,IAAa,CAC1ChC,KAAM,qBACNC,QAAS+B,IAGAC,EAAkBC,IAAW,CACtClC,KAAM,mBACNC,QAASiC,IAGAC,EAA6BC,IAAqB,CAC3DpC,KAAM,+BACNC,QAASmC,I,aChHE,SAASC,IAEpB,MAAMC,GAAWC,EAAAA,EAAAA,MAEXjB,GAAkBkB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASpB,kBACtDnB,GAAaqC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASvC,aACjDE,GAAmBmC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASrC,mBACvDT,GAAU4C,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAAS9C,UAE9C+C,GAA4BC,EAAAA,EAAAA,cAAY,CAAChD,EAAS0B,KAEpD,IAAIuB,EAAwB,EAC5B,OAAQvB,GACJ,IAAK,SACDuB,EAAwBpD,EAAWG,GACnC,MACJ,IAAK,OACDiD,EAAwB/C,EAASF,GACjC,MACJ,QACIiD,EAAwB,EAMhC,OAHAP,EAASvC,EAAWH,IACpB0C,EAASpC,EAAc2C,IACvBP,EAASlC,EAAoBP,WAAWD,GAAWiD,IAC5CA,CAAqB,GAE7B,CAACP,IAEJQ,EAAAA,WAAgB,KACPxB,GACLqB,EAA0B/C,EAAS0B,EAAgB,GACpD,CAACA,EAAiB1B,EAAS+C,IAgB9B,OACII,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oCAAmCC,SAAA,EAG9CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6BAGRF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,UAASF,SAAC,cACzBF,EAAAA,EAAAA,MAAA,UACIK,GAAG,UACHC,MAAO/B,EACPgC,SA1BaC,IACzB,MAAMC,EAAgBD,EAAEE,OAAOJ,MAC/BV,EAA0B/C,EAAS4D,GACnClB,EAASjB,EAAmBmC,IAC5BlB,EAAS9B,EAAiB,KAC1B8B,EAAS3B,EAAoB,KAC7B2B,EAASpC,EAAc,IACvBoC,EAASlC,EAAoB,GAAG,EAmBU6C,SAAA,EAE9BC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,GAAEJ,SAAC,oBAEjBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,SAAQJ,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,OAAMJ,SAAC,gBAM7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,UAASF,SAAC,eACzBC,EAAAA,EAAAA,KAAA,SACIlD,KAAK,OACLoD,GAAG,UACHC,MAAOzD,EACP0D,SAAWC,GAAMZ,EAA0BY,EAAEE,OAAOJ,aAK5DN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SAAC,kBAG3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SAAA,IAAAS,OAChBvD,SAKb4C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAC,yBAG5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,SAChB5C,EAAgB,IAAAqD,OAAOrD,GAAgB,YAM5D,CCjGe,SAASsD,IAEpB,MAAMrB,GAAWC,EAAAA,EAAAA,MACXqB,GAAOpB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASkB,OAC3CtC,GAAkBkB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASpB,kBAEtDuC,GAAkBrB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASmB,kBACtDC,GAActB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASqB,aAClDxD,GAAgBiC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASnC,gBACpDyD,GAAgBxB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASsB,gBACpDpD,GAAmB4B,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAAS9B,mBACvDqD,GAAgBzB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASuB,gBAE1DnB,EAAAA,WAAgB,KACZ,IAAKc,EAAM,OAEX,MACMM,EADYN,EAAKA,KAAKO,UACFC,MAAKF,GAA4B,qBAAjBA,EAAQG,OAE5CC,GADWJ,EAAUA,EAAQK,SAAW,IACrBH,MAAKE,GAAWA,EAAQD,OAAS/C,IACpDwC,EAAcQ,EAAUA,EAAQE,OAAOC,KAAIhC,GAASA,EAAM4B,OAAQ,GAClE5B,EAAQ6B,EAAUA,EAAQE,OAAOJ,MAAK3B,GAASA,EAAM4B,OAAS9D,IAAiB,KAC/EyD,EAAgBvB,EAAQA,EAAMiC,UAAUD,KAAIE,GAAYA,EAASN,OAAQ,GACzEM,EAAWlC,EAAQA,EAAMiC,UAAUN,MAAKO,GAAYA,EAASN,OAASzD,IAAoB,KAC1FgE,EAAQD,EAAWA,EAASC,MAAQ,KAE1CtC,EAAShC,EAAUwD,IACnBxB,EAAS7B,EAAiBuD,IAC1B1B,EAASzB,EAAiB+D,GAAO,GAElC,CAAChB,EAAMC,EAAiBvC,EAAiBf,EAAeK,EAAkB0B,IAsB7E,OACIS,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2CAA0CC,SAAA,EAErDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UAClCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oCAGRF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,cACPF,EAAAA,EAAAA,MAAA,UAAQM,MAAO/B,EAAiBgC,SAAWC,GA7B1BA,KACzB,MAAMC,EAAgBD,EAAEE,OAAOJ,MAC/Bf,EAASjB,EAAmBmC,IAC5BlB,EAAS9B,EAAiB,KAC1B8B,EAAS3B,EAAoB,KAC7B2B,EAASpC,EAAc,IACvBoC,EAASlC,EAAoB,GAAG,EAuByByE,CAAoBtB,GAAGN,SAAA,EACpEC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,GAAEJ,SAAC,oBACjBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,SAAQJ,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,OAAMJ,SAAC,gBAK7BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,YACPF,EAAAA,EAAAA,MAAA,UAAQM,MAAO9C,EAAe+C,SAAWC,GA9B1BA,KACvB,MAAMC,EAAgBD,EAAEE,OAAOJ,MAC/Bf,EAAS9B,EAAiBgD,IAC1BlB,EAAS3B,EAAoB,IAAI,EA2BsBmE,CAAkBvB,GAAGN,SAAA,EAChEC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,GAAEJ,SAAC,iBAChBa,EAAcA,EAAYW,KAAIhC,IAASS,EAAAA,EAAAA,KAAA,UAAoBG,MAAOZ,EAAMQ,SAAER,GAAtBA,KAAyC,YAItGM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eACPF,EAAAA,EAAAA,MAAA,UAAQM,MAAOzC,EAAkB0C,SAAWC,GAhC1BA,KAC1B,MAAMC,EAAgBD,EAAEE,OAAOJ,MAC/Bf,EAAS3B,EAAoB6C,GAAe,EA8BcuB,CAAqBxB,GAAGN,SAAA,EACtEC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,GAAEJ,SAAC,oBAChBe,EAAgBA,EAAcS,KAAIE,IAAYzB,EAAAA,EAAAA,KAAA,UAAuBG,MAAOsB,EAAS1B,SAAE0B,GAA5BA,KAAkD,YAKtH5B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAC,0BAG5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,SAChBgB,EAAa,IAAAP,OAAOO,GAAa,YAMtD,CC9GO,MAAMe,EAAaA,KACtB,MACMC,EAAQ,GACd,IAAK,IAAIC,GAFW,IAAIC,MAAOC,cAELF,GAAK,KAAMA,IACjCD,EAAMI,KAAKH,GAGf,OADAD,EAAMI,KAAK,iBACJJ,CAAK,EAIHK,EAAuBA,CAAC9D,EAAWE,EAAY6D,EAAeC,KAEvE,GAAkB,sBAAdhE,GAAoD,wBAAfE,IAAyC6D,IAAkBC,EAChG,OAAO,EAGX,GAAsB,MAAlBD,GAA2C,KAAlBA,EAAsB,OAAO,EAC1D,GAAyB,MAArBA,EAAc,IAAmC,MAArBA,EAAc,IAAmC,MAArBA,EAAc,IAAmC,MAArBA,EAAc,GAAY,CAC9G,IAAIE,EAAa,GACbC,EAAkB,GACtB,MAAMC,EAAmBJ,EAAcK,QAAQ,KACzCC,EAAkBN,EAAcK,QAAQ,KAEvBH,EAAvBI,GAAmB,EAAiBN,EAAcO,MAAM,EAAGD,GAAgCN,EAAcO,MAAM,EAAGH,GAE3FD,EAAvBG,GAAmB,EAAsBN,EAAcO,MAAMD,EAAkB,GAAuBN,EAAcO,MAAMH,EAAmB,GAE7I,MAAMI,EAAgBC,SAASP,GACzBQ,EAAqBD,SAASN,GAEpCH,EAAgC,IAAhBQ,EACER,GAAlBG,EAAwD,IAArBO,EAA4C,CAEnF,CAEA,MAAMrE,EAAaoE,SAAST,GAEtBW,GADc,IAAIf,MAAOC,cACF5D,EAC7B,IAAI2E,EAAS,EAgHb,MA9GmB,QAAfzE,GAAuC,WAAfA,IAEpByE,EADAD,GAAU,EACY,IAAbtE,EAEJsE,GAAU,EACO,IAAbtE,EAEJsE,GAAU,EACO,IAAbtE,EAEJsE,GAAU,EACO,EAAbtE,EAEJsE,GAAU,EACO,GAAbtE,EAEJsE,GAAU,EACO,GAAbtE,EAEJsE,GAAU,GACO,IAAbtE,EAEJsE,GAAU,GACO,IAAbtE,EAEJsE,GAAU,GACO,IAAbtE,EAEJsE,GAAU,GACO,IAAbtE,EAEJsE,GAAU,GACO,IAAbtE,EAEJsE,EAAS,IAAMA,GAAU,GACR,IAAbtE,EAEa,EAAbA,EAGbuE,GAAU,IACVA,GAAU,IACVA,GAAwB,KAAbvE,EACXuE,GAAU,GACVA,GAAU,GACVA,GAAU,IAIK,aAAfzE,IAEAyE,GAAU,IACVA,GAAU,IACVA,GAAU,GACVA,GAAU,GACVA,GAAU,IAGK,WAAfzE,IAGIyE,EADAD,GAAU,EACY,GAAbtE,EAEJsE,GAAU,EACO,IAAbtE,EAEJsE,GAAU,EACO,IAAbtE,EAEJsE,GAAU,EACO,GAAbtE,EAEJsE,GAAU,EACO,IAAbtE,EAEJsE,GAAU,EACO,GAAbtE,EAEJsE,GAAU,EACO,GAAbtE,EAEJsE,GAAU,GACO,IAAbtE,EAEJsE,GAAU,GACO,IAAbtE,EAEJsE,GAAU,GACO,IAAbtE,EAEJsE,GAAU,GACO,IAAbtE,EAEJsE,GAAU,GACO,IAAbtE,EAEJsE,EAAS,IAAMA,GAAU,GACR,IAAbtE,EAEa,EAAbA,EAGbuE,GAAU,IACVA,GAAU,IACVA,GAAwB,KAAbvE,EACXuE,GAAU,GACVA,GAAU,GACVA,GAAU,IAGPC,KAAKC,MAAOF,EAASX,EAAwB,IAAM,EAAE,ECjJjD,SAASc,IAEpB,MAAMhE,GAAWC,EAAAA,EAAAA,MACXf,GAAYgB,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASlB,YAChDE,GAAac,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAAShB,aACjDE,GAAaY,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASd,aACjDE,GAAaU,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAASZ,aACjD0D,GAAuBhD,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,SAAS8C,uBA6BjE,OACIzC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCC,SAAA,EAE7CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UAClCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BAGRF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBACPF,EAAAA,EAAAA,MAAA,UAAQM,MAAO7B,EAAW8B,SAAWC,GAnClBA,KAC3B,MAAMC,EAAgBD,EAAEE,OAAOJ,MACzBvB,EAAawD,EAAqB9B,EAAe9B,EAAYE,EAAY4D,GAC/ElD,EAASf,EAAaiC,IACtBlB,EAAST,EAAcC,GAAY,EA+BgByE,CAAsBhD,GAAGN,SAAA,EAChEC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,oBAAmBJ,SAAC,sBACjC+B,EAAaA,IAAaP,KAAIjD,IAAa0B,EAAAA,EAAAA,KAAA,UAAwBG,MAAO7B,EAAUyB,SAAEzB,GAA9BA,KAAqD,YAItHuB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPF,EAAAA,EAAAA,MAAA,UAAQM,MAAO3B,EAAY4B,SAAWC,GApClBA,KAC5B,MAAMC,EAAgBD,EAAEE,OAAOJ,MACzBvB,EAAawD,EAAqB9B,EAAeA,EAAe5B,EAAY4D,GAClFlD,EAASb,EAAc+B,IACvBlB,EAAST,EAAcC,GAAY,EAgCiB0E,CAAuBjD,GAAGN,SAAA,EAClEC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,sBAAqBJ,SAAC,yBACpCC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,MAAKJ,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,SAAQJ,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,WAAUJ,SAAC,cACzBC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,SAAQJ,SAAC,kBAI/BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sBAAqBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAA,SAAOlD,KAAK,OAAOqD,MAAOzB,EAAY0B,SAAWC,GAxC7BA,KAC5B,MAAMC,EAAgBD,EAAEE,OAAOJ,MACzBvB,EAAawD,EAAqB9D,EAAWE,EAAY8B,EAAegC,GAC9ElD,EAASX,EAAc6B,IACvBlB,EAAST,EAAcC,GAAY,EAoC4B2E,CAAuBlD,SAYlFR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,SAAC,kBAG5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,SAAA,IAAAS,OACZ5B,UAMzB,CCzFe,SAAS4E,IA4BpB,OACIxD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BAahB,CC7CA,MAmCA,EAnCoB0D,IAAiB,IAAhB,OAAEC,GAAQD,EAC3B,MAAME,EAAcT,KAAKU,MAAMF,GACzBG,EAAiB,EAAIF,EACrBG,EAAUJ,EAASC,EAyBzB,OACI3D,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAxBbgE,MAChB,MAAMC,EAAQ,GAGd,IAAK,IAAIhC,EAAI,EAAGA,EAAI2B,EAAa3B,IAC7BgC,EAAM7B,MAAKnC,EAAAA,EAAAA,KAAA,QAAcF,UAAU,cAAaC,SAAC,UAA3BiC,IAItB8B,GAAW,IACXE,EAAM7B,MAAKnC,EAAAA,EAAAA,KAAA,QAAoBF,UAAU,eAAcC,SAAC,gBAAnC,YACd+D,GAAW,KAClBE,EAAM7B,MAAKnC,EAAAA,EAAAA,KAAA,QAA2BF,UAAU,sBAAqBC,SAAC,gBAAjD,mBAIzB,IAAK,IAAIiC,EAAI,EAAGA,EAAI6B,GAAkBC,GAAW,IAAO,EAAI,GAAI9B,IAC5DgC,EAAM7B,MAAKnC,EAAAA,EAAAA,KAAA,QAA4BF,UAAU,OAAMC,SAAC,UAAlCiC,EAAI2B,IAG9B,OAAOK,CAAK,EAKPD,IACC,EC5BC,SAASE,IAEpB,MAAM7E,GAAWC,EAAAA,EAAAA,MACXqB,GAAOpB,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASkB,OAC7C5B,GAAgBQ,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASV,gBACtD3B,GAAmBmC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASrC,mBACzDyB,GAAaU,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASZ,aACnDR,GAAkBkB,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASpB,kBACxDf,GAAgBiC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASnC,gBACtDK,GAAmB4B,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAAS9B,mBACzDsB,GAAcM,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASR,cACpDkF,GAAyB5E,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAAS0E,yBAG/DC,GAAiBzE,EAAAA,EAAAA,cACnB,SAAC0E,EAAOC,GACJ,MAAMC,EAAsB,UADTC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,QACgB,EAAI,EAC1C,OAAOH,EAAMxB,QAAQ8B,MAAK,CAACC,EAAGC,MACXD,EAAEN,IAAa,IACfO,EAAEP,IAAa,IAEHC,GAEnC,GACA,IAIEO,GAAwBC,EAAAA,EAAAA,UAAQ,KAClC,MAAMC,EAAaZ,EAAea,KAAKC,MAAMD,KAAKE,UAAUpG,IAAiBE,EAAYqF,SAAUrF,EAAYmG,OACzGC,EAAQL,EAAWM,WAAWrE,GAA6B,qBAAjBA,EAAQG,OAIxD,OAHIiE,GAAS,GACTL,EAAWO,OAAOF,EAAO,GAEtBL,CAAU,GAClB,CAACjG,EAAeqF,EAAgBnF,EAAYmG,MAAOnG,EAAYqF,WAG5DkB,GAA0B7F,EAAAA,EAAAA,cAAasB,IACzC,IAAIiC,EAAS,EAEb,GAAI7E,GAAmBf,GAAiBK,EAAkB,CACtD,MAAM2D,EAAWL,EAAUA,EAAQK,SAAW,GACxCD,EAAkB,OAARC,QAAQ,IAARA,OAAQ,EAARA,EAAUH,MAAME,GAAYA,EAAQD,OAAS/C,IACvDkD,EAAgB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASE,OAClB/B,EAAc,OAAN+B,QAAM,IAANA,OAAM,EAANA,EAAQJ,MAAM3B,GAAUA,EAAM4B,OAAS9D,IAC/CmE,EAAiB,OAALjC,QAAK,IAALA,OAAK,EAALA,EAAOiC,UACnBC,EAAoB,OAATD,QAAS,IAATA,OAAS,EAATA,EAAWN,MAAMO,GAAaA,EAASN,OAASzD,IAEjEuF,IADsB,OAARxB,QAAQ,IAARA,OAAQ,EAARA,EAAUC,QACL,CACvB,CAOA,OALAtC,EAASH,EAA0B,CAC/BkC,KAAMH,EAAQG,KACdhB,MAAO8C,KAGJA,CAAM,GACd,CAAC7E,EAAiBf,EAAeK,EAAkB0B,KAGtDoG,EAAAA,EAAAA,YAAU,KACN,IAAK9E,EAAM,OACX,MAAMO,EAAYP,EAAKA,KAAKO,UAC5B,IAAK,IAAIe,EAAI,EAAGA,EAAIf,EAAUuD,OAAQxC,IAClCuD,EAAwBtE,EAAUe,IAEtC5C,EAASP,EAAiBoC,GAAW,GACtC,CAACP,EAAMhD,EAAkB0B,EAAUmG,IAGtC,MAAME,GAAkB/F,EAAAA,EAAAA,cAAY,WAAmB,IAAlBsB,EAAOuD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC5C,MAGM9H,GAHeU,GAAoB,IACrByB,GAAc,IACPsF,EAAuBlD,EAAQG,OAAS,GAGnE,OADAH,EAAQ0E,UAAYjJ,EACbA,CACX,GAAG,CAACU,EAAkByB,EAAYsF,IAG5ByB,GAA0BjG,EAAAA,EAAAA,cAC3BW,IACG,MAAMC,EAAgBD,EAAEE,OAAOJ,MACzBkE,EAAW/D,EAAcsF,MAAM,KAAK,GACpCT,EAAQ7E,EAAcsF,MAAM,KAAK,GACjCC,EAAa1B,EACfU,EACAR,EACAc,GAEJ/F,EAASL,EAAe,CACpBsF,SAAUA,EACVc,MAAO7E,EAAcsF,MAAM,KAAK,MAEpCxG,EAASP,EAAiBgH,GAAY,GAE1C,CAAChB,EAAuBzF,EAAU+E,IAIhC2B,GAAoBhB,EAAAA,EAAAA,UAAQ,IACvBD,EAAsBtD,KAAIP,IAEzBnB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SACxBiB,EAAQG,QAEbnB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,UACzBC,EAAAA,EAAAA,KAAA,OAAK+F,IAAI,+GAA+GC,IAAKhF,EAAQG,UAEzInB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACrB5C,EAAgB,IAAAqD,OAAOrD,GAAqB,UAGrD6C,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACrBmE,EAAuBlD,EAAQG,MAAK,IAAAX,OAAO0D,EAAuBlD,EAAQG,OAAU,UAG7FnB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACrBnB,EAAU,IAAA4B,OAAO5B,GAAe,UAGzCoB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SACrB0F,EAAgBzE,GAAQ,IAAAR,OAAOiF,EAAgBzE,IAAa,UAGrEhB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC3BC,EAAAA,EAAAA,KAACiG,EAAW,CAACvC,OAAQ1C,EAAQ0C,YAEjC1D,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,UACtBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBA/BmBiB,EAAQG,SAsCpD,CAAC0D,EAAuB1H,EAAkB+G,EAAwBtF,EAAY6G,IAEjF,OACI5F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,SAAC,oBAGtBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SAAC,oBAG9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,SAAC,0BAGrCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAC,mBAG7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,QAAOC,SAAC,aAGvBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,SAAC,cAGxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,gBACPF,EAAAA,EAAAA,MAAA,UAAQM,MAAOnB,EAAYqF,SAAW,IAAMrF,EAAYmG,MAAO/E,SAAWC,GAAMsF,EAAwBtF,GAAGN,SAAA,EACvGC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,aAAYJ,SAAC,gBAC3BC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,cAAaJ,SAAC,iBAC5BC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,gBAAeJ,SAAC,oBAC9BC,EAAAA,EAAAA,KAAA,UAAQG,MAAM,iBAAgBJ,SAAC,6BAI1C+F,IAGb,C,uBCrKO,MAAMI,EAAaA,IACfC,IAAAA,IACE,wBAAyB,CAAEC,OAAQ,CAAC,IACxCC,MAAMC,GACIA,EAAS5F,OCZb,SAAS6F,IAEpB,MAAMnH,GAAWC,EAAAA,EAAAA,OACVjB,EAAiBoI,IAAsBC,EAAAA,EAAAA,UAAS,IAmBvD,OAjBA7G,EAAAA,WAAgB,KACI8G,WACZ,IACItH,EAASnB,GAAW,IACpBmB,EAASrB,EAAS,OAClB,MAAM4I,QAAaT,IACnB9G,EAASvB,EAAe8I,IACxBvH,EAASnB,GAAW,GACxB,CAAE,MAAO2I,GACLxH,EAASrB,EAAS6I,IAClBxH,EAASnB,GAAW,GACxB,GAEJ4I,EAAS,GACV,CAACzH,KAIAS,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EAEzBC,EAAAA,EAAAA,KAACwD,EAAU,KAGX3D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACjBC,EAAAA,EAAAA,KAACb,EAAqB,CAACf,gBAAiBA,EAAiBoI,mBAAoBA,KAC7ExG,EAAAA,EAAAA,KAACS,EAAyB,CAACrC,gBAAiBA,EAAiBoI,mBAAoBA,KACjFxG,EAAAA,EAAAA,KAACoD,EAAiB,QAItBpD,EAAAA,EAAAA,KAACiE,EAAU,MAGvB,C","sources":["components/pages/calc/subCalcs/auctionCostSection/AuctionCostUtils.js","redux/actions/calcActions.js","components/pages/calc/subCalcs/auctionCostSection/AuctionCostSection.jsx","components/pages/calc/subCalcs/transportationCostSection/TransportationCostSection.jsx","components/pages/calc/subCalcs/importCostSection/ImportCostUtils.js","components/pages/calc/subCalcs/importCostSection/ImportCostSection.jsx","components/pages/calc/calcHeader/CalcHeader.jsx","components/shared/RatingStars/RatingStars.jsx","components/pages/calc/calcFooter/CalcFooter.jsx","axios/DataLoader.js","components/pages/calc/Calc.jsx"],"sourcesContent":["\n\nexport const copartCalc = (carCostStr) => {\n\n    let total = 0;\n    let carCost = parseFloat(carCostStr);\n\n    if (!carCost || carCost === 0) {\n        return 0;\n    }\n\n    //High Volume Buyer Fee\n    if (carCost < 99.99) {\n        total += 1;\n    }\n    else if (carCost < 199.99) {\n        total += 25;\n    }\n    else if (carCost < 299.99) {\n        total += 60;\n    }\n    else if (carCost < 349.99) {\n        total += 80;\n    }\n    else if (carCost < 399.99) {\n        total += 90;\n    }\n    else if (carCost < 449.99) {\n        total += 120;\n    }\n    else if (carCost < 499.99) {\n        total += 130;\n    }\n    else if (carCost < 549.99) {\n        total += 140;\n    }\n    else if (carCost < 599.99) {\n        total += 150;\n    }\n    else if (carCost < 699.99) {\n        total += 165;\n    }\n    else if (carCost < 799.99) {\n        total += 185;\n    }\n    else if (carCost < 899.99) {\n        total += 200;\n    }\n    else if (carCost < 999.99) {\n        total += 215;\n    }\n    else if (carCost < 1199.99) {\n        total += 230;\n    }\n    else if (carCost < 1299.99) {\n        total += 255;\n    }\n    else if (carCost < 1399.99) {\n        total += 275;\n    }\n    else if (carCost < 1499.99) {\n        total += 280;\n    }\n    else if (carCost < 1599.99) {\n        total += 290;\n    }\n    else if (carCost < 1699.99) {\n        total += 305;\n    }\n    else if (carCost < 1799.99) {\n        total += 315;\n    }\n    else if (carCost < 1999.99) {\n        total += 325;\n    }\n    else if (carCost < 2399.99) {\n        total += 355;\n    }\n    else if (carCost < 2499.99) {\n        total += 380;\n    }\n    else if (carCost < 2999.99) {\n        total += 400;\n    }\n    else if (carCost < 3499.99) {\n        total += 450;\n    }\n    else if (carCost < 3999.99) {\n        total += 500;\n    }\n    else if (carCost < 4499.99) {\n        total += 600;\n    }\n    else if (carCost < 4999.99) {\n        total += 625;\n    }\n    else if (carCost < 5999.99) {\n        total += 650;\n    }\n    else if (carCost < 6499.99) {\n        total += 675;\n    }\n    else if (carCost < 6999.99) {\n        total += 675;\n    }\n    else if (carCost < 7499.99) {\n        total += 700;\n    }\n    else if (carCost < 7999.99) {\n        total += 700;\n    }\n    else if (carCost < 8499.99) {\n        total += 725;\n    }\n    else if (carCost < 8999.99) {\n        total = 725\n    }\n    else if (carCost < 9999.99) {\n        total += 725;\n    }\n    else if (carCost < 10499.99) {\n        total += 750;\n    }\n    else if (carCost < 10999.99) {\n        total += 750;\n    }\n    else if (carCost < 11499.99) {\n        total += 750;\n    }\n    else if (carCost < 11999.99) {\n        total += 760;\n    }\n    else if (carCost < 12499.99) {\n        total += 775;\n    }\n    else if (carCost < 14999.99) {\n        total += 790;\n    }\n    else if (carCost > 14999.99) {\n        total += (carCost * .06);\n    }\n\n\n\n    //Internet bid fee Live online bid fee\n    if (carCost < 499.99) {\n        total += 49;\n    }\n    else if (carCost < 999.99) {\n        total += 59;\n    }\n    else if (carCost < 1499.99) {\n        total += 79;\n    }\n    else if (carCost < 1999.99) {\n        total += 89;\n    }\n    else if (carCost < 3999.99) {\n        total += 99;\n    }\n    else if (carCost < 5999.99) {\n        total += 109;\n    }\n    else if (carCost < 7999.99) {\n        total += 139;\n    }\n    else if (carCost > 7999.99) {\n        total = total + 149;\n    }\n\n\n    total += 10; //Eviromental fee\n    total += 20; //Title fee\n    total += 79; //Documentation fee\n\n    return total;\n}\n\n\nexport const iaaiCalc = (carCostStr) => {\n\n    let total = 0;\n    let carCost = parseFloat(carCostStr);\n\n    if (!carCost || carCost === 0) {\n        return 0;\n    }\n\n\n    //High Volume Buyer Fee\n    if (carCost < 99.99) {\n        total += 1;\n    }\n    else if (carCost < 199.99) {\n        total += 25;\n    }\n    else if (carCost < 299.99) {\n        total += 60;\n    }\n    else if (carCost < 349.99) {\n        total += 80;\n    }\n    else if (carCost < 399.99) {\n        total += 90;\n    }\n    else if (carCost < 449.99) {\n        total += 120;\n    }\n    else if (carCost < 499.99) {\n        total += 130;\n    }\n    else if (carCost < 549.99) {\n        total += 140;\n    }\n    else if (carCost < 599.99) {\n        total += 150;\n    }\n    else if (carCost < 699.99) {\n        total += 165;\n    }\n    else if (carCost < 799.99) {\n        total += 185;\n    }\n    else if (carCost < 899.99) {\n        total += 200;\n    }\n    else if (carCost < 999.99) {\n        total += 215;\n    }\n    else if (carCost < 1199.99) {\n        total += 230;\n    }\n    else if (carCost < 1299.99) {\n        total += 255;\n    }\n    else if (carCost < 1399.99) {\n        total += 275;\n    }\n    else if (carCost < 1499.99) {\n        total += 280;\n    }\n    else if (carCost < 1599.99) {\n        total += 290;\n    }\n    else if (carCost < 1699.99) {\n        total += 305;\n    }\n    else if (carCost < 1799.99) {\n        total += 315;\n    }\n    else if (carCost < 1999.99) {\n        total += 325;\n    }\n    else if (carCost < 2399.99) {\n        total += 355;\n    }\n    else if (carCost < 2499.99) {\n        total += 380;\n    }\n    else if (carCost < 2999.99) {\n        total += 400;\n    }\n    else if (carCost < 3499.99) {\n        total += 450;\n    }\n    else if (carCost < 3999.99) {\n        total += 500;\n    }\n    else if (carCost < 4499.99) {\n        total += 600;\n    }\n    else if (carCost < 4999.99) {\n        total += 625;\n    }\n    else if (carCost < 5999.99) {\n        total += 650;\n    }\n    else if (carCost < 6499.99) {\n        total += 675;\n    }\n    else if (carCost < 6999.99) {\n        total += 675;\n    }\n    else if (carCost < 7499.99) {\n        total += 700;\n    }\n    else if (carCost < 7999.99) {\n        total += 700;\n    }\n    else if (carCost < 8499.99) {\n        total += 725;\n    }\n    else if (carCost < 8999.99) {\n        total = 725\n    }\n    else if (carCost < 9999.99) {\n        total += 725;\n    }\n    else if (carCost < 10499.99) {\n        total += 750;\n    }\n    else if (carCost < 10999.99) {\n        total += 750;\n    }\n    else if (carCost < 11499.99) {\n        total += 750;\n    }\n    else if (carCost < 11999.99) {\n        total += 760;\n    }\n    else if (carCost < 12499.99) {\n        total += 775;\n    }\n    else if (carCost < 14999.99) {\n        total += 790;\n    }\n    else if (carCost > 14999.99) {\n        total += (carCost * .06);\n    }\n\n    //Internet bid fee Live online bid fee\n    if (carCost < 499.99) {\n        total += 49;\n    }\n    else if (carCost < 999.99) {\n        total += 59;\n    }\n    else if (carCost < 1499.99) {\n        total += 79;\n    }\n    else if (carCost < 1999.99) {\n        total += 89;\n    }\n    else if (carCost < 3999.99) {\n        total += 99;\n    }\n    else if (carCost < 5999.99) {\n        total += 109;\n    }\n    else if (carCost < 7999.99) {\n        total += 139;\n    }\n    else if (carCost > 7999.99) {\n        total = total + 149;\n    }\n\n    total += 10; //Eviromental fee\n    total += 35; //Broker fee \n    total += 79; //Documentation fee\n\n    return total;\n}\n","\nexport const SetCarCost = (carCost) => ({\n    type: 'SET_CAR_COST',\n    payload: carCost,\n});\n\nexport const SetAuctionFee = (auctionFee) => ({\n    type: 'SET_AUCTION_FEE',\n    payload: auctionFee,\n});\n\nexport const SetTotalAuctionCost = (totalAuctionCost) => ({\n    type: 'SET_TOTAL_AUCTION_COST',\n    payload: totalAuctionCost,\n});\n\nexport const SetSelectedCompany = (selectedCompany) => ({\n    type: 'SET_SELECTED_COMPANY',\n    payload: selectedCompany,\n});\n\nexport const SetCompanyNames = (companyNames) => ({\n    type: 'SET_COMPANY_NAMES',\n    payload: companyNames,\n});\n\nexport const SetAuctionNames = (auctionNames) => ({\n    type: 'SET_AUCTION_NAMES',\n    payload: auctionNames,\n});\n\nexport const SetStates = (selectedState) => ({\n    type: 'SET_STATES',\n    payload: selectedState,\n});\n\nexport const SetSelectedState = (selectedState) => ({\n    type: 'SET_SELECTED_STATE',\n    payload: selectedState,\n});\n\nexport const SetLocationNames = (locationList) => ({\n    type: 'SET_LOCATION_NAMES',\n    payload: locationList,\n});\n\nexport const SetSelectedLocation = (selectedLocation) => ({\n    type: 'SET_SELECTED_LOCATION',\n    payload: selectedLocation,\n});\n\nexport const SetLocationPrice = (locationPrices) => ({\n    type: 'SET_LOCATION_PRICE',\n    payload: locationPrices,\n});\n\nexport const SetCalcDataSet = (calcDataSet) => ({\n    type: 'SET_CALC_DATA_SET',\n    payload: calcDataSet,\n});\n\nexport const SetError = (error) => ({\n    type: 'SET_ERROR',\n    payload: error,\n});\n\nexport const SetLoading = (loading) => ({\n    type: 'SET_LOADING',\n    payload: loading,\n});\n\nexport const SetSelectedAuction = (selectedAuction) => ({\n    type: 'SET_SELECTED_AUCTION',\n    payload: selectedAuction,\n});\n\nexport const SetModelYear = (modelYear) => ({\n    type: 'SET_MODEL_YEAR',\n    payload: modelYear,\n});\n\nexport const SetEngineType = (engineType) => ({\n    type: 'SET_ENGINE_TYPE',\n    payload: engineType,\n});\n\nexport const SetEngineSize = (engineSize) => ({\n    type: 'SET_ENGINE_SIZE',\n    payload: engineSize,\n});\n\nexport const SetSteeringPosition = (steeringPosition) => ({\n    type: 'SET_STEERING_POSITION',\n    payload: steeringPosition,\n});\n\nexport const SetImportCost = (importCost) => ({\n    type: 'SET_IMPORT_COST',\n    payload: importCost,\n});\n\nexport const SetUsdToGelExchangeRate = (usdToGelExchangeRate) => ({\n    type: 'SET_USD_TO_GEL_EXCHANGE_RATE',\n    payload: usdToGelExchangeRate,\n});\n\nexport const SetCompaniesList = (companiesList) => ({\n    type: 'SET_COMPANIES_LIST',\n    payload: companiesList,\n});\n\nexport const SetFilterValue = (filterValue) => ({\n    type: 'SET_FILTER_VALUE',\n    payload: filterValue,\n});\n\nexport const SetTransportationCostList = (trasnporationCostList) => ({\n    type: 'SET_TRANSPORTATION_COST_LIST',\n    payload: trasnporationCostList,\n});\n\n\n\n// Compare this snippet from carvanna/src/redux/actions/calcActions.js:","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { copartCalc, iaaiCalc } from './AuctionCostUtils';\nimport './AuctionCostSection.scss';\nimport { SetSelectedAuction, SetCarCost, SetAuctionFee, SetTotalAuctionCost, SetSelectedState, SetSelectedLocation } from '../../../../../redux/actions/calcActions';\n\nexport default function AuctionCarCostSection() {\n\n    const dispatch = useDispatch();\n    // const auctionNames = useSelector(state => state.calcData.auctionNames);\n    const selectedAuction = useSelector(state => state.calcData.selectedAuction);\n    const auctionFee = useSelector(state => state.calcData.auctionFee);\n    const totalAuctionCost = useSelector(state => state.calcData.totalAuctionCost);\n    const carCost = useSelector(state => state.calcData.carCost);\n\n    const calculateTotalAuctionCost = useCallback((carCost, selectedAuction) => {\n        // Implement your logic to calculate the total auction cost based on carCost\n        let calculatedAuctionCost = 0;\n        switch (selectedAuction) {\n            case 'Copart':\n                calculatedAuctionCost = copartCalc(carCost);\n                break;\n            case 'IAAI':\n                calculatedAuctionCost = iaaiCalc(carCost);\n                break;\n            default:\n                calculatedAuctionCost = 0;\n                break;\n        }\n        dispatch(SetCarCost(carCost));\n        dispatch(SetAuctionFee(calculatedAuctionCost));\n        dispatch(SetTotalAuctionCost(parseFloat(carCost) + calculatedAuctionCost));\n        return calculatedAuctionCost;\n\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        if (!selectedAuction) return;\n        calculateTotalAuctionCost(carCost, selectedAuction);\n    }, [selectedAuction, carCost, calculateTotalAuctionCost]);\n\n\n    const handleAuctionChange = (e) => {\n        const selectedValue = e.target.value;\n        calculateTotalAuctionCost(carCost, selectedValue);\n        dispatch(SetSelectedAuction(selectedValue));\n        dispatch(SetSelectedState(''));\n        dispatch(SetSelectedLocation(''));\n        dispatch(SetAuctionFee(0));\n        dispatch(SetTotalAuctionCost(0));\n\n    };\n\n\n\n    return (\n        <div className=\"calc-section calc-section-auction\">\n\n            {/* Auction Section */}\n            <div className=\"auction-header\">\n                <h2>Auction Cost Section:</h2>\n            </div>\n\n            <div className='auction-section'>\n                <label htmlFor=\"auction\">Auction:</label>\n                <select\n                    id=\"auction\"\n                    value={selectedAuction}\n                    onChange={handleAuctionChange}\n                >\n                    <option value=\"\">Select Auction</option>\n\n                    <option value=\"Copart\">Copart</option>\n                    <option value=\"IAAI\">IAAI</option>\n                    {/* {auctionNames ? auctionNames.map(auction => <option key={auction} value={auction}>{auction}</option>) : null} */}\n                </select>\n            </div>\n\n            {/* Car Cost Section */}\n            <div className=\"car-section\">\n                <label htmlFor=\"carCost\">Car Cost:</label>\n                <input\n                    type=\"text\"\n                    id=\"carCost\"\n                    value={carCost}\n                    onChange={(e) => calculateTotalAuctionCost(e.target.value)}\n                />\n            </div>\n\n            {/* Auction Fee Cost Section */}\n            <div className=\"total-fee-cost\">\n                <div className=\"fee-label\">\n                    Auction Fee:\n                </div>\n                <div className=\"fee-cost\">\n                    {`$${auctionFee}`}\n                </div>\n            </div>\n\n            {/* Total Cost Section */}\n            <div className=\"total-cost\">\n                <div className=\"cost-label\">\n                    Total Auction Cost:\n                </div>\n                <div className=\"cost\">\n                    {totalAuctionCost ? `$${totalAuctionCost}` : `$0`}\n                </div>\n            </div>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    SetSelectedAuction,\n    SetStates,\n    SetSelectedState,\n    SetLocationNames,\n    SetSelectedLocation,\n    SetLocationPrice,\n    SetAuctionFee,\n    SetTotalAuctionCost,\n} from '../../../../../redux/actions/calcActions';\nimport './TransportationCostSection.scss';\n\nexport default function TransportationCostSection() {\n\n    const dispatch = useDispatch();\n    const data = useSelector(state => state.calcData.data);\n    const selectedAuction = useSelector(state => state.calcData.selectedAuction);\n    // const auctionNames = useSelector(state => state.calcData.auctionNames);\n    const selectedCompany = useSelector(state => state.calcData.selectedCompany);\n    const statesNames = useSelector(state => state.calcData.stateNames);\n    const selectedState = useSelector(state => state.calcData.selectedState);\n    const locationNames = useSelector(state => state.calcData.locationNames);\n    const selectedLocation = useSelector(state => state.calcData.selectedLocation);\n    const locationPrice = useSelector(state => state.calcData.locationPrice);\n\n    React.useEffect(() => {\n        if (!data) return;\n\n        const companies = data.data.companies;\n        const company = companies.find(company => company.name === \"Estimated Prices\");\n        const auctions = company ? company.auctions : [];\n        const auction = auctions.find(auction => auction.name === selectedAuction);\n        const statesNames = auction ? auction.states.map(state => state.name) : [];\n        const state = auction ? auction.states.find(state => state.name === selectedState) : null;\n        const locationNames = state ? state.locations.map(location => location.name) : [];\n        const location = state ? state.locations.find(location => location.name === selectedLocation) : null;\n        const price = location ? location.price : null;\n\n        dispatch(SetStates(statesNames));\n        dispatch(SetLocationNames(locationNames));\n        dispatch(SetLocationPrice(price));\n\n    }, [data, selectedCompany, selectedAuction, selectedState, selectedLocation, dispatch]);\n\n    const handleAuctionChange = (e) => {\n        const selectedValue = e.target.value;\n        dispatch(SetSelectedAuction(selectedValue));\n        dispatch(SetSelectedState(''));\n        dispatch(SetSelectedLocation(''));\n        dispatch(SetAuctionFee(0));\n        dispatch(SetTotalAuctionCost(0));\n    };\n\n    const handleStateChange = (e) => {\n        const selectedValue = e.target.value;\n        dispatch(SetSelectedState(selectedValue));\n        dispatch(SetSelectedLocation(''));\n    }\n\n    const handleLocationChange = (e) => {\n        const selectedValue = e.target.value;\n        dispatch(SetSelectedLocation(selectedValue));\n    }\n\n    return (\n        <div className=\"calc-section calc-section-transportation\">\n\n            <div className=\"transposration-header\">\n                <h2>Transportation Cost Section:</h2>\n            </div>\n\n            <div className='auction-section'>\n                <label>Auction:</label>\n                <select value={selectedAuction} onChange={(e) => handleAuctionChange(e)}>\n                    <option value=\"\">Select Auction</option>\n                    <option value=\"Copart\">Copart</option>\n                    <option value=\"IAAI\">IAAI</option>\n                    {/* {auctionNames ? auctionNames.map(auction => <option key={auction} value={auction}>{auction}</option>) : null} */}\n                </select>\n            </div>\n\n            <div className=\"state-section\">\n                <label>State:</label>\n                <select value={selectedState} onChange={(e) => handleStateChange(e)}>\n                    <option value=\"\">Select State</option>\n                    {statesNames ? statesNames.map(state => <option key={state} value={state}>{state}</option>) : null}\n                </select>\n            </div>\n\n            <div className=\"location-section\">\n                <label>Location:</label>\n                <select value={selectedLocation} onChange={(e) => handleLocationChange(e)}>\n                    <option value=\"\">Select Location</option>\n                    {locationNames ? locationNames.map(location => <option key={location} value={location}>{location}</option>) : null}\n                </select>\n\n            </div>\n\n            <div className=\"transportation-price\">\n                <div className=\"cost-label\">\n                    Transportation Cost:\n                </div>\n                <div className=\"cost\">\n                    {locationPrice ? `$${locationPrice}` : `$0`}\n                </div>\n            </div>\n\n        </div>\n    );\n}\n","\nexport const modelYears = () => {\n    const currentYear = new Date().getFullYear()\n    const years = []\n    for (let i = currentYear; i >= 1984; i--) {\n        years.push(i)\n    }\n    years.push(`1983 or older`)\n    return years\n}\n\n\nexport const importCostCalculator = (modelYear, engineType, engineSizeStr, usdToGelExchangeRate) => {\n\n    if (modelYear === 'Pick a Model Year' || engineType === 'Pick an Engine Type' || !engineSizeStr || !usdToGelExchangeRate) {\n        return 0\n    }\n\n    if (engineSizeStr === '0' || engineSizeStr === '') return 0;\n    if (engineSizeStr[1] === '.' || engineSizeStr[1] === ',' || engineSizeStr[2] === ',' || engineSizeStr[2] === '.') {\n        let firstDigit = '';\n        let remainingDigits = ''\n        const positonOfDecimal = engineSizeStr.indexOf('.')\n        const positionOfComma = engineSizeStr.indexOf(',')\n\n        positionOfComma > -1 ? firstDigit = engineSizeStr.slice(0, positionOfComma) : firstDigit = engineSizeStr.slice(0, positonOfDecimal)\n\n        positionOfComma > -1 ? remainingDigits = engineSizeStr.slice(positionOfComma + 1) : remainingDigits = engineSizeStr.slice(positonOfDecimal + 1)\n\n        const intFirstDigit = parseInt(firstDigit);\n        const intRemainingDigits = parseInt(remainingDigits);\n\n        engineSizeStr = intFirstDigit * 1000;\n        remainingDigits ? engineSizeStr += intRemainingDigits * 100 : engineSizeStr += 0;\n\n    }\n\n    const engineSize = parseInt(engineSizeStr);\n    const currentYear = new Date().getFullYear()\n    const carAge = currentYear - modelYear;\n    let output = 0;\n\n    if (engineType === \"Gas\" || engineType === \"Diesel\") {\n        if (carAge <= 2) {\n            output = engineSize * 1.5\n        }\n        else if (carAge <= 3) {\n            output = engineSize * 1.4\n        }\n        else if (carAge <= 4) {\n            output = engineSize * 1.2\n        }\n        else if (carAge <= 5) {\n            output = engineSize * 1\n        }\n        else if (carAge <= 8) {\n            output = engineSize * 0.8\n        }\n        else if (carAge <= 9) {\n            output = engineSize * 0.9\n        }\n        else if (carAge <= 10) {\n            output = engineSize * 1.1\n        }\n        else if (carAge <= 11) {\n            output = engineSize * 1.3\n        }\n        else if (carAge <= 12) {\n            output = engineSize * 1.5\n        }\n        else if (carAge <= 13) {\n            output = engineSize * 1.8\n        }\n        else if (carAge <= 14) {\n            output = engineSize * 2.1\n        }\n        else if (carAge > 14 && carAge <= 40) {\n            output = engineSize * 2.4\n        } else {\n            output = engineSize * 1\n        }\n\n        output += 150; // add customs fee\n        output += 200; // add registration fee\n        output += (engineSize * 0.058) // add import fee\n        output += 30 // add inspection fee\n        output += 50 // add customs declaration fee\n        output += 50 // add internal transit fee\n\n    }\n\n    if (engineType === \"Electric\") {\n\n        output += 150; // add customs fee\n        output += 200; // add registration fee\n        output += 30 // add inspection fee\n        output += 50 // add customs declaration fee\n        output += 50 // add internal transit fee\n    }\n\n    if (engineType === \"Hybrid\") {\n\n        if (carAge <= 2) {\n            output = engineSize * 0.6\n        }\n        else if (carAge <= 3) {\n            output = engineSize * 0.56\n        }\n        else if (carAge <= 4) {\n            output = engineSize * 0.48\n        }\n        else if (carAge <= 5) {\n            output = engineSize * 0.4\n        }\n        else if (carAge <= 6) {\n            output = engineSize * 0.32\n        }\n        else if (carAge <= 8) {\n            output = engineSize * 0.8\n        }\n        else if (carAge <= 9) {\n            output = engineSize * 0.9\n        }\n        else if (carAge <= 10) {\n            output = engineSize * 1.1\n        }\n        else if (carAge <= 11) {\n            output = engineSize * 1.3\n        }\n        else if (carAge <= 12) {\n            output = engineSize * 1.5\n        }\n        else if (carAge <= 13) {\n            output = engineSize * 1.8\n        }\n        else if (carAge <= 14) {\n            output = engineSize * 2.1\n        }\n        else if (carAge > 14 && carAge <= 40) {\n            output = engineSize * 2.4\n        } else {\n            output = engineSize * 1\n        }\n\n        output += 150; // add customs fee\n        output += 200; // add registration fee\n        output += (engineSize * 0.058) // add import fee\n        output += 30 // add inspection fee\n        output += 50 // add customs declaration fee\n        output += 50 // add internal transit fee\n    }\n\n    return Math.round((output / usdToGelExchangeRate) * 10) / 10;\n\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SetModelYear, SetEngineType, SetEngineSize, SetImportCost } from '../../../../../redux/actions/calcActions';\nimport { modelYears, importCostCalculator } from './ImportCostUtils';\nimport './ImportCostSection.scss';\n\n\nexport default function ImportCostSection() {\n\n    const dispatch = useDispatch();\n    const modelYear = useSelector(state => state.calcData.modelYear);\n    const engineType = useSelector(state => state.calcData.engineType);\n    const engineSize = useSelector(state => state.calcData.engineSize);\n    const importCost = useSelector(state => state.calcData.importCost);\n    const usdToGelExchangeRate = useSelector(state => state.calcData.usdToGelExchangeRate);\n    // const steeringPosition = useSelector(state => state.calcData.steeringPosition);\n\n    const handleModelYearChange = (e) => {\n        const selectedValue = e.target.value;\n        const importCost = importCostCalculator(selectedValue, engineType, engineSize, usdToGelExchangeRate);\n        dispatch(SetModelYear(selectedValue));\n        dispatch(SetImportCost(importCost));\n    }\n\n    const handleEngineTypeChange = (e) => {\n        const selectedValue = e.target.value;\n        const importCost = importCostCalculator(selectedValue, selectedValue, engineSize, usdToGelExchangeRate);\n        dispatch(SetEngineType(selectedValue));\n        dispatch(SetImportCost(importCost));\n    }\n\n    const handleEngineSizeChange = (e) => {\n        const selectedValue = e.target.value;\n        const importCost = importCostCalculator(modelYear, engineType, selectedValue, usdToGelExchangeRate);\n        dispatch(SetEngineSize(selectedValue));\n        dispatch(SetImportCost(importCost));\n    }\n\n    // const handleSteeringPositionChange = (e) => {\n    //     const selectedValue = e.target.value;\n    //     dispatch(SetSteeringPosition(selectedValue));\n    // }\n\n    return (\n        <div className=\"calc-section calc-section-import\">\n\n            <div className=\"transposration-header\">\n                <h2>Import Cost Section:</h2>\n            </div>\n\n            <div className='model-year-section'>\n                <label>Model Year:</label>\n                <select value={modelYear} onChange={(e) => handleModelYearChange(e)}>\n                    <option value=\"Pick a Model Year\">Pick a Model Year</option>\n                    {modelYears ? modelYears().map(modelYear => <option key={modelYear} value={modelYear}>{modelYear}</option>) : null}\n                </select>\n            </div>\n\n            <div className=\"engine-type\">\n                <label>Engine Type:</label>\n                <select value={engineType} onChange={(e) => handleEngineTypeChange(e)}>\n                    <option value=\"Pick an Engine Type\">Pick an Engine Type</option>\n                    <option value=\"Gas\">Gas</option>\n                    <option value=\"Diesel\">Diesel</option>\n                    <option value=\"Electric\">Electric</option>\n                    <option value=\"Hybrid\">Hybrid</option>\n                </select>\n            </div>\n\n            <div className=\"engine-size-section\">\n                <label>Engine Size:</label>\n                <input type=\"text\" value={engineSize} onChange={(e) => handleEngineSizeChange(e)} />\n            </div>\n\n            {/* <div className=\"steering-wheel-postion\">\n                <label>Steering Position:</label>\n                <select value={steeringPosition} onChange={(e) => handleSteeringPositionChange(e)}>\n                    <option value=\"Pick a Steering Position\">Pick a Steering Position</option>\n                    <option value=\"left\">Left</option>\n                    <option value=\"right\">Right</option>\n                </select>\n            </div> */}\n\n            <div className=\"import-cost\">\n                <div className=\"cost-label\">\n                    Import Cost:\n                </div>\n                <div className=\"cost\">\n                    {`$${importCost}`}\n                </div>\n            </div>\n\n        </div>\n    );\n}\n","import React from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { SetSelectedCompany, SetCompanyNames, SetAuctionNames, SetSelectedAuction, SetSelectedState, SetSelectedLocation } from '../../../../redux/actions/calcActions';\nimport \"./CalcHeader.scss\"\n\nexport default function CalcHeader() {\n    // const dispatch = useDispatch();\n    // const data = useSelector(state => state.calcData.data);\n    // console.log('data', data);\n    // const selectedCompany = useSelector(state => state.calcData.selectedCompany);\n    // let companyNames = useSelector(state => state.calcData.companyNames);\n\n    // React.useEffect(() => {\n    //     if (!data) return;\n\n    //     const companies = data.data.companies;\n    //     const companyNamesList = companies.map(company => company.name);\n    //     const company = companies.find(company => company.name === selectedCompany);\n    //     const auctionNames = company ? company.auctions.map(auction => auction.name) : [];\n\n    //     dispatch(SetAuctionNames(auctionNames));\n    //     dispatch(SetCompanyNames(companyNamesList));\n\n    // }, [data, selectedCompany]);\n\n    // const handleCompanyChange = (e) => {\n    //     const selectedValue = e.target.value;\n    //     dispatch(SetSelectedCompany(selectedValue));\n    //     dispatch(SetSelectedAuction(''));\n    //     dispatch(SetSelectedState(''));\n    //     dispatch(SetSelectedLocation(''));\n    // };\n\n    return (\n        <div className=\"calc-header\">\n            <h1>Bidder Cost Calculator</h1>\n            {/* <h3>Select company to calculate your car transportation and import cost</h3> \n            <div className='calc-header-sub'>\n                <div className='company-select'>\n                    <label>Select Company:</label>\n                    <select value={selectedCompany} onChange={(e) => handleCompanyChange(e)}>\n                        <option value=\"\">Select Company</option>\n                        {companyNames ? companyNames.map(company => <option key={company} value={company}>{company}</option>) : null}\n                    </select>\n                </div>\n            </div> */}\n        </div>\n    );\n}","import React from 'react';\nimport './RatingStars.scss';\n\nconst RatingStars = ({ rating }) => {\n    const filledStars = Math.floor(rating);\n    const remainingStars = 5 - filledStars;\n    const decimal = rating - filledStars;\n\n    const renderStars = () => {\n        const stars = [];\n\n        // Render filled stars\n        for (let i = 0; i < filledStars; i++) {\n            stars.push(<span key={i} className=\"star filled\">&#9733;</span>);\n        }\n\n        // Render quarter stars if applicable\n        if (decimal >= 0.25) {\n            stars.push(<span key=\"quarter\" className=\"star quarter\">&#9734;&#9733;</span>);\n        } else if (decimal >= 0.75) {\n            stars.push(<span key=\"three-quarters\" className=\"star three-quarters\">&#9733;&#9734;</span>);\n        }\n\n        // Render remaining empty stars\n        for (let i = 0; i < remainingStars - (decimal >= 0.75 ? 1 : 0); i++) {\n            stars.push(<span key={i + filledStars} className=\"star\">&#9734;</span>);\n        }\n\n        return stars;\n    };\n\n    return (\n        <div className=\"rating-stars\">\n            {renderStars()}\n        </div>\n    );\n};\n\nexport default RatingStars;","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SetCompaniesList, SetFilterValue, SetTransportationCostList } from '../../../../redux/actions/calcActions';\nimport RatingStars from '../../../shared/RatingStars/RatingStars';\nimport './CalcFooter.scss';\n\nexport default function CalcFooter() {\n\n    const dispatch = useDispatch();\n    const data = useSelector((state) => state.calcData.data);\n    const companiesList = useSelector((state) => state.calcData.companiesList);\n    const totalAuctionCost = useSelector((state) => state.calcData.totalAuctionCost);\n    const importCost = useSelector((state) => state.calcData.importCost);\n    const selectedAuction = useSelector((state) => state.calcData.selectedAuction);\n    const selectedState = useSelector((state) => state.calcData.selectedState);\n    const selectedLocation = useSelector((state) => state.calcData.selectedLocation);\n    const filterValue = useSelector((state) => state.calcData.filterValue);\n    const transportationCostList = useSelector((state) => state.calcData.transportationCostList);\n\n\n    const sortByProperty = useCallback(\n        (array, property, order = 'asc') => {\n            const sortOrder = order === 'desc' ? -1 : 1;\n            return array.slice().sort((a, b) => {\n                const valueA = a[property] || 0;\n                const valueB = b[property] || 0;\n\n                return (valueA - valueB) * sortOrder;\n            });\n        },\n        []\n    );\n\n\n    const companiesListInternal = useMemo(() => {\n        const clonedList = sortByProperty(JSON.parse(JSON.stringify(companiesList)), filterValue.property, filterValue.order);\n        const index = clonedList.findIndex((company) => company.name === 'Estimated Prices');\n        if (index > -1) {\n            clonedList.splice(index, 1);\n        }\n        return clonedList;\n    }, [companiesList, sortByProperty, filterValue.order, filterValue.property]);\n\n\n    const handleTransporationCost = useCallback((company) => {\n        let output = 0;\n\n        if (selectedAuction && selectedState && selectedLocation) {\n            const auctions = company ? company.auctions : [];\n            const auction = auctions?.find((auction) => auction.name === selectedAuction);\n            const states = auction?.states;\n            const state = states?.find((state) => state.name === selectedState);\n            const locations = state?.locations;\n            const location = locations?.find((location) => location.name === selectedLocation);\n            const price = location?.price;\n            output += price || 0;\n        }\n\n        dispatch(SetTransportationCostList({\n            name: company.name,\n            value: output\n        }));\n\n        return output;\n    }, [selectedAuction, selectedState, selectedLocation, dispatch]);\n\n\n    useEffect(() => {\n        if (!data) return;\n        const companies = data.data.companies;\n        for (let i = 0; i < companies.length; i++) {\n            handleTransporationCost(companies[i]);\n        }\n        dispatch(SetCompaniesList(companies));\n    }, [data, selectedLocation, dispatch, handleTransporationCost]);\n\n\n    const handleTotalCost = useCallback((company = {}) => {\n        const totalAuction = totalAuctionCost || 0;\n        const totalImport = importCost || 0;\n        const transportationCost = transportationCostList[company.name] || 0;\n        const total = totalAuction + totalImport + transportationCost;\n        company.totalCost = total;\n        return total;\n    }, [totalAuctionCost, importCost, transportationCostList]);\n\n\n    const handleFilterValueChange = useCallback(\n        (e) => {\n            const selectedValue = e.target.value;\n            const property = selectedValue.split(' ')[0];\n            const order = selectedValue.split(' ')[1];\n            const sortedList = sortByProperty(\n                companiesListInternal,\n                property,\n                order\n            );\n            dispatch(SetFilterValue({\n                property: property,\n                order: selectedValue.split(' ')[1]\n            }));\n            dispatch(SetCompaniesList(sortedList));\n        },\n        [companiesListInternal, dispatch, sortByProperty]\n    );\n\n\n    const returnCompanyList = useMemo(() => {\n        return companiesListInternal.map(company => {\n            return (\n                <div className=\"company-item\" key={company.name}>\n                    <div className=\"company-name\">\n                        {company.name}\n                    </div>\n                    <div className=\"company-logo\">\n                        <img src=\"https://png.pngtree.com/png-vector/20190225/ourmid/pngtree-circuit-logo-template-vector-png-image_704226.jpg\" alt={company.name}></img>\n                    </div>\n                    <div className=\"cost-indicator\">\n                        <div className=\"sub-value\">\n                            {totalAuctionCost ? `$${totalAuctionCost}` : \"$0\"}\n                        </div>\n                    </div>\n                    <div className=\"cost-indicator\">\n                        <div className=\"sub-value\">\n                            {transportationCostList[company.name] ? `$${transportationCostList[company.name]}` : \"$0\"}\n                        </div>\n                    </div>\n                    <div className=\"cost-indicator\">\n                        <div className=\"sub-value\">\n                            {importCost ? `$${importCost}` : \"$0\"}\n                        </div>\n                    </div>\n                    <div className=\"cost-indicator\">\n                        <div className=\"sub-value\">\n                            {handleTotalCost(company) ? `$${handleTotalCost(company)}` : \"$0\"}\n                        </div>\n                    </div>\n                    <div className=\"company-rating\">\n                        <RatingStars rating={company.rating} />\n                    </div>\n                    <div className=\"view-more\">\n                        <button>\n                            View More\n                        </button>\n                    </div>\n                </div>\n            )\n        })\n    }, [companiesListInternal, totalAuctionCost, transportationCostList, importCost, handleTotalCost]);\n\n    return (\n        <div className=\"footer-content\">\n            <div className=\"company-labels\">\n                <div className=\"name\">\n                    Company Name :\n                </div>\n                <div className=\"auction-cost\">\n                    Auction Cost :\n                </div>\n                <div className=\"transportation-cost\">\n                    Transporation Cost :\n                </div>\n                <div className=\"import-cost\">\n                    Import Cost :\n                </div>\n                <div className=\"total\">\n                    Total :\n                </div>\n                <div className=\"rating\">\n                    Rating :\n                </div>\n                <div className=\"filter\">\n                    <label>Filter By:</label>\n                    <select value={filterValue.property + ' ' + filterValue.order} onChange={(e) => handleFilterValueChange(e)}>\n                        <option value=\"rating asc\">Rating asc</option>\n                        <option value=\"rating desc\">Rating desc</option>\n                        <option value=\"totalCost asc\">Total Cost asc</option>\n                        <option value=\"totalCost desc\">Total Cost desc</option>\n                    </select>\n                </div>\n            </div>\n            {returnCompanyList}\n        </div>\n    )\n}","import axios from 'axios';\n// import customAxios from './customAxios';\n\n// Define the parameters for the request\n\n\n// Make a GET request with the defined parameters\n// const getData = () => {\n\n//     return customAxios.get('/', { params })\n//         .then(response => {\n//             console.log('Response:', response.data);\n//         })\n//         .catch(error => {\n//             console.error('Error:', error);\n//         });\n\n// }\n\nexport const getDataSet = () => {\n    return axios\n        .get('/apis/dummy_data.json', { params: {} })\n        .then((response) => {\n            return response.data;\n        });\n};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport AuctionCarCostSection from './subCalcs/auctionCostSection/AuctionCostSection';\nimport TransportationCostSection from './subCalcs/transportationCostSection/TransportationCostSection';\nimport ImportCostSection from './subCalcs/importCostSection/ImportCostSection';\nimport CalcHeader from './calcHeader/CalcHeader';\nimport CalcFooter from './calcFooter/CalcFooter';\nimport { getDataSet } from '../../../axios/DataLoader';\nimport { SetCalcDataSet, SetError, SetLoading } from '../../../redux/actions/calcActions';\nimport './Calc.scss';\n\nexport default function Calc() {\n\n    const dispatch = useDispatch();\n    const [selectedAuction, setSelectedAuction] = useState('');\n    // get the data from api\n    React.useEffect(() => {\n        const process = async () => {\n            try {\n                dispatch(SetLoading(true));\n                dispatch(SetError(null));\n                const resp = await getDataSet();\n                dispatch(SetCalcDataSet(resp));\n                dispatch(SetLoading(false));\n            } catch (err) {\n                dispatch(SetError(err));\n                dispatch(SetLoading(false));\n            }\n        };\n        process();\n    }, [dispatch]);\n\n\n    return (\n        <div className=\"page-content\">\n            {/* Select Transportation Company you want to calculate cost for: */}\n            <CalcHeader />\n\n            {/* Auction Car Cost Section */}\n            <div className=\"calc\">\n                <AuctionCarCostSection selectedAuction={selectedAuction} setSelectedAuction={setSelectedAuction} />\n                <TransportationCostSection selectedAuction={selectedAuction} setSelectedAuction={setSelectedAuction} />\n                <ImportCostSection />\n            </div>\n\n            {/* Companies List Section */}\n            <CalcFooter />\n        </div>\n    );\n}\n"],"names":["copartCalc","carCostStr","total","carCost","parseFloat","iaaiCalc","SetCarCost","type","payload","SetAuctionFee","auctionFee","SetTotalAuctionCost","totalAuctionCost","SetStates","selectedState","SetSelectedState","SetLocationNames","locationList","SetSelectedLocation","selectedLocation","SetLocationPrice","locationPrices","SetCalcDataSet","calcDataSet","SetError","error","SetLoading","loading","SetSelectedAuction","selectedAuction","SetModelYear","modelYear","SetEngineType","engineType","SetEngineSize","engineSize","SetImportCost","importCost","SetCompaniesList","companiesList","SetFilterValue","filterValue","SetTransportationCostList","trasnporationCostList","AuctionCarCostSection","dispatch","useDispatch","useSelector","state","calcData","calculateTotalAuctionCost","useCallback","calculatedAuctionCost","React","_jsxs","className","children","_jsx","htmlFor","id","value","onChange","e","selectedValue","target","concat","TransportationCostSection","data","selectedCompany","statesNames","stateNames","locationNames","locationPrice","company","companies","find","name","auction","auctions","states","map","locations","location","price","handleAuctionChange","handleStateChange","handleLocationChange","modelYears","years","i","Date","getFullYear","push","importCostCalculator","engineSizeStr","usdToGelExchangeRate","firstDigit","remainingDigits","positonOfDecimal","indexOf","positionOfComma","slice","intFirstDigit","parseInt","intRemainingDigits","carAge","output","Math","round","ImportCostSection","handleModelYearChange","handleEngineTypeChange","handleEngineSizeChange","CalcHeader","_ref","rating","filledStars","floor","remainingStars","decimal","renderStars","stars","CalcFooter","transportationCostList","sortByProperty","array","property","sortOrder","arguments","length","undefined","sort","a","b","companiesListInternal","useMemo","clonedList","JSON","parse","stringify","order","index","findIndex","splice","handleTransporationCost","useEffect","handleTotalCost","totalCost","handleFilterValueChange","split","sortedList","returnCompanyList","src","alt","RatingStars","getDataSet","axios","params","then","response","Calc","setSelectedAuction","useState","async","resp","err","process"],"sourceRoot":""}