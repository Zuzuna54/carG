{"version":3,"file":"static/js/854.9dc73128.chunk.js","mappings":"gLAMA,MAwEA,EAxEkBA,IAA6B,IAA5B,mBAAEC,GAAoBD,EACrC,MAAOE,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAAcC,IAAmBN,EAAAA,EAAAA,WAAS,GAC3CO,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EACQ,aADRA,EAEQ,aA0Bd,OACIC,EAAAA,EAAAA,MAAA,QAAMC,UAAWR,EAAe,gBAAkB,GAAIS,SAjBpCC,IAClBA,EAAEC,iBAIElB,IAAaa,GACbV,IAAaU,GAEbF,ECxB2C,CACnDQ,KAAM,4BACNC,SDsByC,IACjCX,EAAS,yBAETH,EAAS,gCACTE,GAAgB,GACpB,EAI6Ea,SAAA,EACzEP,EAAAA,EAAAA,MAAA,OAAAO,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,SACIH,KAAK,OACLK,GAAG,WACHC,KAAK,WACLC,MAAO1B,EACP2B,SAjCcV,IAC1BhB,EAAYgB,EAAEW,OAAOF,MAAM,QAmCvBZ,EAAAA,EAAAA,MAAA,OAAAO,SAAA,EACIC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,SACIH,KAAK,WACLK,GAAG,WACHC,KAAK,WACLC,MAAOvB,EACPwB,SAvCcV,IAC1Bb,EAAYa,EAAEW,OAAOF,MAAM,QAyCvBJ,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAQH,KAAK,SAAQE,SAAC,aAE1BC,EAAAA,EAAAA,KAAA,OAAKP,UAAU,YAAWM,SACrBd,IACGe,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,KAAAD,SAAIhB,UAKb,EEvEA,SAASwB,EAAI/B,GAA0B,IAAzB,mBAAEC,GAAoBD,EAE/C,OACIwB,EAAAA,EAAAA,KAAAQ,EAAAA,SAAA,CAAAT,UACIC,EAAAA,EAAAA,KAAA,OAAKP,UAAU,eAAcM,UACzBC,EAAAA,EAAAA,KAACS,EAAS,CAAChC,mBAAoBA,OAK/C,C","sources":["components/auth/login/Login.jsx","redux/actions/authActions.js","components/auth/preAuth/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setAuthenticationStatus } from '../../../redux/actions/authActions';\nimport { useNavigate } from 'react-router-dom';\nimport \"./Login.scss\"\n\nconst LoginForm = ({ setIsAuthenticated }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState(null);\n    const [isLoginError, setIsLoginError] = useState(false);\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const dummyCredentials = {\n        username: 'Elizbar777',\n        password: 'elizbar777',\n    };\n    const handleUsernameChange = (e) => {\n        setUsername(e.target.value);\n    };\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Add your login logic here, e.g., send a request to an authentication API\n        // Navigate to the dashboard page after successful login with dummy credentials\n        if (\n            username === dummyCredentials.username &&\n            password === dummyCredentials.password\n        ) {\n            dispatch(setAuthenticationStatus(true));\n            navigate('/dashboard/homepage')\n        } else {\n            setError('Invalid username or password');\n            setIsLoginError(true);\n        }\n    };\n\n    return (\n        <form className={isLoginError ? 'error-visible' : ''} onSubmit={handleSubmit}>\n            <div>\n                <label htmlFor=\"username\">Username:</label>\n                <input\n                    type=\"text\"\n                    id=\"username\"\n                    name=\"username\"\n                    value={username}\n                    onChange={handleUsernameChange}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"password\">Password:</label>\n                <input\n                    type=\"password\"\n                    id=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handlePasswordChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\">Login</button>\n            </div>\n            <div className='error-log'>\n                {isLoginError && (\n                    <div>\n                        <p>{error}</p>\n                    </div>\n                )}\n            </div>\n\n        </form>\n    );\n};\n\nexport default LoginForm;\n","// authActions.js\nexport const login = () => ({\n    type: 'LOGIN',\n});\n\nexport const logout = () => ({\n    type: 'LOGOUT',\n});\n\nexport const setAuthenticationStatus = (isAuthenticated) => ({\n    type: 'SET_AUTHENTICATION_STATUS',\n    payload: isAuthenticated,\n});","import LoginForm from \"../login/Login\"\nimport \"./Login.scss\"\n\nexport default function Home({ setIsAuthenticated }) {\n\n    return (\n        <>\n            <div className=\"page-content\">\n                <LoginForm setIsAuthenticated={setIsAuthenticated} />\n            </div>\n        </>\n    )\n\n}\n\n\n"],"names":["_ref","setIsAuthenticated","username","setUsername","useState","password","setPassword","error","setError","isLoginError","setIsLoginError","navigate","useNavigate","dispatch","useDispatch","dummyCredentials","_jsxs","className","onSubmit","e","preventDefault","type","payload","children","_jsx","htmlFor","id","name","value","onChange","target","Home","_Fragment","LoginForm"],"sourceRoot":""}